{"version":3,"sources":["stores/UserStore.js","pages/Login/index.js","SubmitButton.js","pages/kpi/KPI.js","pages/pmoinput.js","pages/pmInput.js","pages/kpi/PMKPI.js","ShowData.js","pages/home/ProjectDetails.js","Components/PMSidebarData.js","Components/SASideBarData.js","Components/Navigation.js","Components/PMOSidebarData.js","stores/ProjectStore.js","pages/home/ProjectHealth.js","pages/home/Progress.js","pages/home/home.js","images/accel.jpg","Components/AppBar.js","App.js","reportWebVitals.js","index.js"],"names":["extendObservable","this","loading","isLoggedIn","username","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","LoginForm","enqueueSnackbar","useSnackbar","classes","useState","setUsername","password","setPassword","rememberPassword","inputs","validInput","setValidInput","useEffect","localStorage","clear","doLogin","a","input","fetch","method","headers","body","JSON","stringify","res","json","result","success","UserStore","sessionStorage","setItem","resetForm","Container","component","maxWidth","CssBaseline","className","Avatar","Typography","variant","noValidate","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","onChange","event","val","target","value","trim","length","error","helperText","type","Button","color","onClick","Grid","container","Box","mt","React","Component","withStyles","head","fontFamily","fontSize","height","padding","TableCell","TableRow","table","minWidth","maxHeight","PMOInput","props","getProjects","then","response","data","setState","projects","isLoading","state","users","practices","act","index","PROJECT_ID","PROJECT_NAME","PROJECT_DESCRIPTION","PROJECT_START_DATE","Date","PROJECT_END_DATE","PROJECT_TYPE","PROJECT_METHODOLOGY","PROJECT_STATUS","INSERT_DATE","toISOString","substr","PRACTICE","PM_USERNAME","SA_USERNAME","remove","bind","onChangeProjectName","onChangeDescription","onChangeStartDate","onChangeEndDate","onChangeType","onChangeMethodology","onChangeStatus","onChangeInsertDate","onChangePractice","onChangePM","onChangeSA","onSubmit","e","date","project","slice","console","log","catch","startDateParts","split","endDateParts","updatedProjects","filter","i","align","TableContainer","Paper","TableHead","TableBody","scope","style","selected","dateFormat","Select","MenuItem","map","PRACTICE_ID","practice","location","user_name","ButtonGroup","size","handleEdit","practice_detail","StyledTableCell","StyledTableRow","root","action","hover","PMInput","pminputs","setpminputs","pmValues","setPmValues","projectId","getdata","resp","push","PROJECT_COMPLETE_PERCENT","PROJECT_FIN_ACT_BUD","PROJECT_FIN_FCT_BUD","PROJECT_MILESTONE","PROJECT_DETAIL_ID","Table","paddingLeft","witdh","url","saveData","deleteData","defaultValue","getValue","Object","assign","undefined","LAST_UPDATE_DATE","InputField","prop","setValue","onKeyPress","InputText","PMKPI","setLoading","kpi","setKpi","reducer","accumulator","currentValue","parseFloat","tableData","item","editPMNotes","isRowUpdated","projectPMO","parse","getItem","PMO","self","indexOf","roleName","ROLE","unique","Map","mapKey","MILESTONE_ID","CYCLE_ID","has","set","MILESTONE","KPI_WEIGHT","KPI_SCORE","role","handleChange","change","updateeKPI","PARAMETER_ID","objectID","row","KPI_PMO_POINTS","reduce","MAX_SCORE","KPI_POINTS","textAlign","rows","colSpan","border","aria-label","arr","rowSpan","PARAMETER_NAME","disabled","OWNER","borderBottom","href","KPI_PM_NOTES","IconButton","aria-controls","aria-haspopup","handleEditIconClick","resize","text-align","onBlur","setDefaultHeight","setInputHeight","KPI_PMO_NOTES","visibility","element","defaultHeight","scrollHeight","info","common","black","bullet","transform","title","pos","marginBottom","OutlinedCard","projectData","project_name","Card","boxShadow","CardContent","gutterBottom","project_start_date","PA_NAME1","SA_NAME1","project_status","PMSidebarData","eventKey","path","icon","cName","SASidebarData","observer","sidebar","Provider","projectStore","sidebarArray","exact","to","activeClassName","PMOSidebarData","makeObservable","observable","changeProject","changeRole","background","default","borderColor","toolbar","selectIcon","key","page","setPage","rowsPerPage","setRowsPerPage","roleId","includes","project_id","borderRadius","borderRight","fontWeight","getProjectName","project_milestone","project_type","project_complete_percent","pmoscore","pm_selfscore","toFixed","pm_pmoscore","sa_selfscore","sa_pmoscore","project_fin_act_bud","project_fin_fct_bud","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","flexGrow","text","Home","projectname","setProjectname","progress","setProgress","p","setProgressColor","sm","direction","projectname1","menuButton","marginRight","MenuAppBar","auth","anchorEl","setAnchorEl","open","Boolean","handleClose","useHistory","AppBar","position","Toolbar","src","logo","currentTarget","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","alert","window","App","sucess","styel","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4f0157ea.chunk.js","sourcesContent":["import {extendObservable} from 'mobx';\r\n\r\nclass UserStore {\r\n    constructor() {\r\n        extendObservable(this,{\r\n            loading:true,\r\n            isLoggedIn:false,\r\n            username: ''\r\n        })\r\n    }\r\n}\r\n\r\nexport default new UserStore();","import React, { useState,useEffect } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport UserStore from '../../stores/UserStore';\r\nimport { useSnackbar } from 'notistack';\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function LoginForm() {\r\n  const { enqueueSnackbar} = useSnackbar();\r\n\r\n  const classes = useStyles();\r\n\r\n  const [username, setUsername] = useState(\"\")\r\n  const [password, setPassword] = useState(\"\")\r\n  const [inputs, setInputs] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n    rememberPassword: false,\r\n  });\r\n  const [validInput, setValidInput] = useState({username:true,password:true});\r\n  useEffect(() => {\r\n    localStorage.clear();\r\n\r\n    \r\n  }, []);\r\n  const setUsernameValue = (val) => {\r\n    val = val.trim();\r\n    if (val.length > 12) {\r\n      return;\r\n    }\r\n    setUsername(val)\r\n\r\n  }\r\n  const setPasswordValue = (val) => {\r\n    val = val.trim();\r\n    if (val.length > 12) {\r\n      return;\r\n    }\r\n    setPassword(val)\r\n\r\n  }\r\n  const { rememberPassword } = inputs;\r\n\r\n\r\n  const doLogin = async () => {\r\n    if (!username) {\r\n      setValidInput(input => ({ ...input, username: false }))\r\n      return;\r\n    \r\n    }\r\n    if (!password) {\r\n      setValidInput(input => ({ ...input, password: false }))\r\n      return;\r\n    }\r\nsetValidInput({username:true,password:true})\r\n\r\n    try {\r\n      let res = await fetch('http://20.84.70.197:5000/login', {\r\n        method: 'post',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          username: username,\r\n          password: password\r\n        })\r\n      });\r\n      let result = await res.json();\r\n      if (result && result.success) {\r\n        enqueueSnackbar(\"Login Successfull\")\r\n        UserStore.isLoggedIn = result.success;\r\n        UserStore.username = result.username;\r\n        sessionStorage.setItem('username',result.username);\r\n        sessionStorage.setItem('isLoggedIn', 'true');\r\n        localStorage.setItem('username',result.username);\r\n      }\r\n      else if (result && result.success == false) {\r\n        resetForm();\r\n        enqueueSnackbar(\"Invalid Credential\")\r\n        \r\n      }\r\n\r\n    }\r\n    catch (e) {\r\n      //console.log(e);\r\n      resetForm();\r\n    }\r\n  }\r\n  const resetForm = () => {\r\n    setUsername(\"\")\r\n    setPassword(\"\")\r\n  }\r\n  function handleChange(e) {\r\n    const { name, value } = e.target;\r\n    setInputs((inputs) => ({ ...inputs, [name]: value }));\r\n  }\r\n\r\n  function handleChechbox(e) {\r\n    const { name, value } = e.target;\r\n    console.log(\"eeeeee check\", e.target.type);\r\n    console.log(\"eeeeee check\", e.target.checked);\r\n    console.log(\"eeeeee check inputs\", inputs);\r\n    console.log(\"eeeeee check inputs remember\", inputs.rememberPassword);\r\n    if (e.target.type === \"checkbox\" && !e.target.checked) {\r\n      setInputs((inputs) => ({ ...inputs, [name]: \"\" }));\r\n    } else {\r\n      setInputs((inputs) => ({ ...inputs, [name]: value }));\r\n    }\r\n  }\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"User Name\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            onChange={event => setUsernameValue(event.target.value)}\r\n            value={username}\r\n            error={!validInput.username}\r\n            helperText={!validInput.username ?\" User Name Required.\":''}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            onChange={event => setPasswordValue(event.target.value)}\r\n            value={password}\r\n            error={!validInput.password}\r\n            helperText={!validInput.password ?\" Password Required.\":''}\r\n          />\r\n          <div className=\"form-actions\">\r\n            <br />\r\n            <div className=\"form-check\">\r\n              {/* <input\r\n                type=\"checkbox\"\r\n                className=\"form-check-input\"\r\n                id=\"rememberPassword\"\r\n                name=\"checkbox\"\r\n                checked={rememberPassword}\r\n                onChange={(event) => handleChechbox(event)}\r\n              // required\r\n              /> */}\r\n              {/* <label className=\"form-check-label\" for=\"rememberPassword\">\r\n                Remember me\r\n                    </label> */}\r\n            </div>\r\n          </div>\r\n          <Button\r\n            type=\"button\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={doLogin}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Grid container>\r\n            {/* <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid> */}\r\n            {/* <Grid item>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid> */}\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    \r\n      <Box mt={8}>\r\n\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n\r\n","import React from 'react';\r\n\r\nclass SubmitButton extends React.Component {\r\n  render(){\r\n  return (\r\n    <div className=\"submitButton\">\r\n        <button className=\"btn\" disabled={this.props.disabled} onClick={()=>this.props.onClick()}>{this.props.text}</button>\r\n    </div>\r\n  );\r\n}\r\n}\r\n\r\nexport default SubmitButton;\r\n","import React, { useState, useEffect, useLayoutEffect } from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n//import Button from '@material-ui/core/Button';\r\n//import Paper from '@material-ui/core/Paper';\r\n//import Typography from '@material-ui/core/Typography';\r\n//import projectStore from '../../stores/ProjectStore';\r\n//import { handleInputChange } from 'react-select/src/utils';\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: '#b31317',\r\n    color: 'white',\r\n    fontFamily: \"'Montserrat', sans-serif\",\r\n    fontSize: 11,\r\n  },\r\n  body: {\r\n    fontSize: 11,\r\n    height: 50,\r\n    padding: 3,\r\n    fontFamily: \"'Montserrat', sans-serif\",\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({}))(TableRow);\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n  container: {\r\n    maxHeight: 500,\r\n  },\r\n});\r\n\r\nexport default function KPI(props) {\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = useState(false);\r\n  // const [value, changeValue] = useState([0, 0, 0, 0, 0, 0]);\r\n  // const [pmovalue, pmoValue] = useState([0, 0, 0, 0, 0, 0]);\r\n  // const [notes, Notes] = useState([0, 0, 0, 0, 0, 0]);\r\n  const [pmonotes, pmoNotes] = useState([0, 0, 0, 0, 0]);\r\n  const [key, setKey] = useState('KPI');\r\n\r\n  const [kpi, setKpi] = useState([]);\r\n\r\n  const reducer = (accumulator, currentValue) =>\r\n    parseFloat(accumulator) + parseFloat(currentValue);\r\n\r\n  useEffect(() => {\r\n    fetch('http://20.84.70.197:5000/showKPI', {\r\n      method: 'POST', // or 'PUT'\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        username: props.data[0],\r\n        project_id: props.data[1],\r\n      }),\r\n    })\r\n      .then((resp) => resp.json())\r\n      .then((json) => {\r\n        localStorage.setItem('KPI', JSON.stringify(json));\r\n        const tableData = json.map((item) => {\r\n          return { ...item, editPMNotes: false, isRowUpdated: false };\r\n        });\r\n        setKpi(tableData);\r\n        console.log('hi', tableData);\r\n        setLoading(true);\r\n      });\r\n  }, []);\r\n\r\n  /*\r\n  if (value[0] !== 0) {\r\n    fetch('http://20.84.70.197:5000/points', {\r\n      method: 'PUT', // or 'PUT'\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        POINTS: value[0],\r\n        project_id: value[2],\r\n        kpi_header_id: value[3],\r\n        kpi_detail_id: value[4],\r\n        ROLE: value[5],\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log('Success:', data);\r\n        value[0] = 0;\r\n        value[1] = 0;\r\n        value[2] = 0;\r\n        value[3] = 0;\r\n        value[4] = 0;\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error:', error);\r\n      });\r\n  }\r\n\r\n  console.log(pmovalue);\r\n\r\n  if (pmovalue[0] !== 0) {\r\n    fetch('http://20.84.70.197:5000/pmopoints', {\r\n      method: 'PUT', // or 'PUT'\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        KPI_PMO_POINTS: pmovalue[0],\r\n        project_id: pmovalue[2],\r\n        kpi_header_id: pmovalue[3],\r\n        kpi_detail_id: pmovalue[4],\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log('Success:', data);\r\n        pmovalue[0] = 0;\r\n        pmovalue[1] = 0;\r\n        pmovalue[2] = 0;\r\n        pmovalue[3] = 0;\r\n        pmovalue[4] = 0;\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error:', error);\r\n      });\r\n  }\r\n  if (pmovalue[0] !== 0) {\r\n    fetch('http://20.84.70.197:5000/scores', {\r\n      method: 'PUT', // or 'PUT'\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        KPI_SCORE: pmovalue[5],\r\n        project_id: pmovalue[2],\r\n        kpi_header_id: pmovalue[3],\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log('Success:', data);\r\n        pmovalue[0] = 0;\r\n        pmovalue[1] = 0;\r\n        pmovalue[2] = 0;\r\n        pmovalue[3] = 0;\r\n        pmovalue[4] = 0;\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error:', error);\r\n      });\r\n  }\r\n  if (notes[0] !== 0) {\r\n    fetch('http://20.84.70.197:5000/notes', {\r\n      method: 'PUT', // or 'PUT'\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        notes: notes[0],\r\n        project_id: notes[2],\r\n        kpi_header_id: notes[3],\r\n        kpi_detail_id: notes[4],\r\n        ROLE: notes[5],\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log('Success:', data);\r\n        notes[0] = 0;\r\n        notes[1] = 0;\r\n        notes[2] = 0;\r\n        notes[3] = 0;\r\n        notes[4] = 0;\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error:', error);\r\n      });\r\n  }\r\n  if (pmonotes[0] !== 0) {\r\n    fetch('http://20.84.70.197:5000/pmonotes', {\r\n      method: 'PUT', // or 'PUT'\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        KPI_PMO_NOTES: pmonotes[0],\r\n        project_id: pmonotes[2],\r\n        kpi_header_id: pmonotes[3],\r\n        kpi_detail_id: pmonotes[4],\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log('Success:', data);\r\n        pmonotes[0] = 0;\r\n        pmonotes[1] = 0;\r\n        pmonotes[2] = 0;\r\n        pmonotes[3] = 0;\r\n        pmonotes[4] = 0;\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error:', error);\r\n      });\r\n  }\r\n  console.log('Hello');\r\n  */\r\n  if (loading) {\r\n    // let values = JSON.parse(localStorage.getItem('KPI'));\r\n\r\n    let maintable = JSON.parse(localStorage.getItem('tables'));\r\n\r\n    const projectPMO = maintable\r\n      .map((item) => item.PMO)\r\n      .filter((value, index, self) => self.indexOf(value) === index);\r\n\r\n    console.log('projectPMO', projectPMO);\r\n\r\n    const roleName = kpi\r\n      .map((item) => item.ROLE)\r\n      .filter((value, index, self) => self.indexOf(value) === index);\r\n\r\n    /*\r\n    //const updateValue = JSON.parse(localStorage.getItem('KPI'));\r\n    const newUpdateValue = values.map((item) => {\r\n      var temp = Object.assign({}, item);\r\n      if (temp.kpi_header_id === value[3] && temp.kpi_detail_id === value[4]) {\r\n        temp.POINTS = value[0];\r\n      }\r\n      if (\r\n        temp.kpi_header_id === pmovalue[3] &&\r\n        temp.kpi_detail_id === pmovalue[4]\r\n      ) {\r\n        temp.kpi_pmo_points = pmovalue[0];\r\n      }\r\n      if (temp.kpi_header_id === pmovalue[3]) {\r\n        temp.kpi_score = pmovalue[5];\r\n      }\r\n      return temp;\r\n    });\r\n    localStorage.setItem('KPI', JSON.stringify(newUpdateValue));\r\n\r\n    values = JSON.parse(localStorage.getItem('KPI'));\r\n    */\r\n\r\n    //const reducer = (accumulator, currentValue) => parseInt(accumulator) + parseInt(currentValue);\r\n\r\n    const unique = [];\r\n    const map = new Map();\r\n    for (let i of kpi) {\r\n      if (!map.has(i.kpi_desc)) {\r\n        map.set(i.kpi_desc, true);\r\n        unique.push({\r\n          kpi_desc: i.kpi_desc,\r\n          kpi_weight: i.kpi_weight,\r\n          kpi_score: i.kpi_score,\r\n          role: i.ROLE,\r\n        });\r\n      }\r\n    }\r\n    console.log(roleName[0]);\r\n\r\n    const handleChange = (change) => {\r\n   \r\n\r\n      const updateeKPI = kpi.map((item) => {\r\n        if (\r\n          item.project_id === change.project_id &&\r\n          item.kpi_header_id === change.kpi_header_id &&\r\n          item.kpi_detail_id === change.kpi_detail_id\r\n        ) {\r\n          item[change.objectID] = change.value;\r\n          item.isRowUpdated = true;\r\n          item.kpi_score=(kpi.filter( (row) => row.kpi_desc === item.kpi_desc).map((row) => row.kpi_pmo_points || 0).reduce(reducer, 0) * item.kpi_weight) /100;\r\n          //alert(   (kpi.filter( (row) => row.kpi_desc === item.kpi_desc).map((row) => row.kpi_pmo_points || 0).reduce(reducer, 0) * item.kpi_weight) /100);\r\n       \r\n         \r\n          return { ...item };\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n      setKpi(updateeKPI);\r\n    };\r\n\r\n    const handleEditIconClick = (change) => {\r\n      const updateeKPI = kpi.map((item) => {\r\n        if (\r\n          item.project_id === change.project_id &&\r\n          item.kpi_header_id === change.kpi_header_id &&\r\n          item.kpi_detail_id === change.kpi_detail_id\r\n        ) {\r\n          return { ...item, editPMNotes: true };\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n      setKpi(updateeKPI);\r\n    };\r\n\r\n    const handleSave = () => {\r\n      console.log('saving data', JSON.stringify({kpi}));\r\n      fetch('http://20.84.70.197:5000/pmkpiupdate', {\r\n        method: 'PUT', // or 'PUT'\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({kpi}),\r\n      })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          //console.log('Success:', data);\r\n            //console.log('.....',data);\r\n           \r\n \r\n        })\r\n        .catch((error) => {\r\n          console.error('Error:', error);\r\n        });\r\n  \r\n\r\n      //make api call to update data\r\n    };\r\n\r\n    return (\r\n      //   <Tabs\r\n      //   id=\"controlled-tab-example\"\r\n      //   activeKey={key === 'KPI'?`${roleName[0]} ${key}`:'Home'}\r\n      //   onSelect={(k) => setKey(k)}\r\n      // >\r\n\r\n      //   <Tab eventKey=\"Home\" title=\"Home\"><Tables data ={props.data[0]}/></Tab>\r\n\r\n      //   <Tab eventKey=\"SA KPI\" title=\"SA KPI\">\r\n      //{maintable.filter((row)=>row.project_id===projectStore.name?row.project_name:null)}\r\n     // <Button onClick={handleSave}>Save</Button>\r\n      <div className=\"kpiTable\">\r\n        <button color=\"primary\" type=\"submit\" onClick={handleSave}>SAVE</button>\r\n        \r\n        <TableContainer >\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <StyledTableCell  style={{ width: 200, textAlign: 'left' }}><b>Category</b></StyledTableCell>\r\n                <StyledTableCell  style={{ width: 280, textAlign: 'left' }}><b>Details</b></StyledTableCell>\r\n                <StyledTableCell  style={{ width: 30, textAlign: 'left' }}><b>Max Points</b></StyledTableCell>\r\n                <StyledTableCell  style={{ width: 40, textAlign: 'left' }}><b>SA Points</b></StyledTableCell>\r\n                <StyledTableCell  style={{ width: 40, textAlign: 'left' }}><b>PMO Points</b></StyledTableCell>\r\n                <StyledTableCell  style={{ width: 30, textAlign: 'left'}}><b>Weight </b>  </StyledTableCell>\r\n                <StyledTableCell style={{ width: 30, textAlign: 'left'}}><b> Score</b></StyledTableCell>\r\n                <StyledTableCell  style={{ width: 150, textAlign: 'left' }} ><b>SA Notes</b></StyledTableCell>\r\n                <StyledTableCell  style={{ maxWidth: 150, textAlign: 'left' }}> <b>PMO Notes</b></StyledTableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            {unique.filter((rows) => rows.role === 'SA').map((rows) => (\r\n                <TableRow>\r\n                  <StyledTableCell colSpan=\"9\" style={{border:'1px solid black' }}>\r\n                <Table className={classes.table} aria-label=\"customized table\" style={{ border: 1 }}>\r\n                      <TableBody>\r\n                        {kpi.filter((row) => row.kpi_desc === rows.kpi_desc).map((row, i, arr) => (\r\n                            <TableRow key={row.kpi_detail_task_name}>\r\n                              {i == 0 ? (\r\n                              <StyledTableCell component=\"td\" rowSpan={arr.length} style={{ width: 200,textAlign: 'left'}}>\r\n                                <b>{rows.kpi_desc}</b></StyledTableCell>) : null}\r\n                              <StyledTableCell component=\"td\" style={{ width: 250,textAlign:'left'}}>\r\n                                {row.kpi_detail_task_name}</StyledTableCell>\r\n                              <StyledTableCell component=\"td\" style={{ width: 40, textAlign: 'left' }}>\r\n                                {row.kpi_max_points}</StyledTableCell>\r\n                              <StyledTableCell component=\"td\" style={{ width: 50, textAlign: 'left' }}>\r\n                                <input type=\"text\" className=\"saInput\" defaultValue={row.POINTS} size=\"1\" style={{ fontSize: 12, fontFamily: \"'Montserrat', sans-serif\" }}\r\n                                  onChange={(event) =>\r\n                                    handleChange({\r\n                                      value: event.target.value || 0,\r\n                                      kpi_desc: rows.kpi_desc,\r\n                                      project_id: row.project_id,\r\n                                      kpi_header_id: row.kpi_header_id,\r\n                                      kpi_detail_id: row.kpi_detail_id,\r\n                                      role: rows.role,\r\n                                      objectID: 'POINTS',\r\n                                    })\r\n                                  }\r\n                                  disabled={projectPMO[0] === 'Y' ? 'disabled' : null }\r\n                                />\r\n                              </StyledTableCell>\r\n                              <StyledTableCell component=\"td\" style={{ width: 50, textAlign: 'left' }}>\r\n                                <input type=\"text\" className=\"saInput\" defaultValue={row.kpi_pmo_points || 0} size=\"1\"\r\n                                  style={{ fontSize: 12,fontFamily: \"'Montserrat', sans-serif\"}}\r\n                                  onChange={(event) =>\r\n                                    handleChange({\r\n                                      value: event.target.value || 0,\r\n                                      kpi_desc: rows.kpi_desc,\r\n                                      project_id: row.project_id,\r\n                                      kpi_header_id: row.kpi_header_id,\r\n                                      kpi_detail_id: row.kpi_detail_id,\r\n                                      role: rows.role,\r\n                                      objectID: 'kpi_pmo_points',\r\n                                    })\r\n                                  }\r\n                                  disabled={\r\n                                    projectPMO[0] === 'N' ? 'disabled' : null\r\n                                  }\r\n                                />\r\n                              </StyledTableCell>\r\n                              {i === 0 ? (\r\n                                <StyledTableCell\r\n                                  component=\"td\"\r\n                                  rowSpan={arr.length}\r\n                                  style={{\r\n                                    width: 50,\r\n                                    textAlign: 'center',\r\n                                    borderBottom: 'none',\r\n                                  }}\r\n                                >\r\n                                  {rows.kpi_weight}\r\n                                </StyledTableCell>\r\n                              ) : null}\r\n                              {i === 0 ? (\r\n                                <StyledTableCell\r\n                                  component=\"td\"\r\n                                  rowSpan={arr.length}\r\n                                  style={{\r\n                                    width: 50,\r\n                                    textAlign: 'center',\r\n                                    borderBottom: 'none'}}>                                \r\n                                     {(kpi.filter( (row) => row.kpi_desc === rows.kpi_desc)\r\n                                    .map((row) => row.kpi_pmo_points || 0)\r\n                                    .reduce(reducer, 0) * rows.kpi_weight) /100}\r\n                                </StyledTableCell>\r\n                              ) : null}\r\n                              <StyledTableCell\r\n                                style={{\r\n                                  width: 180,\r\n                                  textAlign: 'left',\r\n                                  borderBottom: 'none',\r\n                                }}\r\n                              >\r\n                                {!row.editPMNotes && (\r\n                                  <>\r\n                                  <a style={{display: \"table-cell\"}} href={row.NOTES} target=\"_blank\">{row.NOTES}</a>\r\n                                    {projectPMO[0] === 'N' && (\r\n                                      <IconButton\r\n                                        aria-label=\"account of current user\"\r\n                                        aria-controls=\"menu-appbar\"\r\n                                        aria-haspopup=\"true\"\r\n                                        color=\"inherit\"\r\n                                        onClick={(event) =>\r\n                                          handleEditIconClick({\r\n                                            kpi_desc: rows.kpi_desc,\r\n                                            project_id: row.project_id,\r\n                                            kpi_header_id: row.kpi_header_id,\r\n                                            kpi_detail_id: row.kpi_detail_id,\r\n                                          })\r\n                                        }\r\n                                      >\r\n                                        <CreateIcon />\r\n                                      </IconButton>\r\n                                    )}\r\n                                  </>\r\n                                )}\r\n                                {row.editPMNotes && (\r\n                                  <>\r\n                                    <textarea\r\n                                      style={{\r\n                                        height: 20,\r\n                                        width: 150,\r\n                                        resize: 'none',\r\n                                        fontSize: 12,\r\n                                        fontFamily: \"'Montserrat', sans-serif\",\r\n                                      }}\r\n                                      text-align=\"left\"\r\n                                      defaultValue={row.NOTES}\r\n                                      className=\"saInput\"\r\n                                      onBlur={(event) => {\r\n                                        handleChange({\r\n                                          value: event.target.value || 0,\r\n                                          kpi_desc: rows.kpi_desc,\r\n                                          project_id: row.project_id,\r\n                                          kpi_header_id: row.kpi_header_id,\r\n                                          kpi_detail_id: row.kpi_detail_id,\r\n                                          role: rows.role,\r\n                                          objectID: 'NOTES',\r\n                                        });\r\n                                        setDefaultHeight(event, '20px');\r\n                                      }}\r\n                                      onClick={(event) =>\r\n                                        setInputHeight(event, '20px')\r\n                                      }\r\n                                      onChange={(event) =>\r\n                                        setInputHeight(event, '20px')\r\n                                      }\r\n                                    />\r\n                                  </>\r\n                                )}\r\n                              </StyledTableCell>\r\n                              <StyledTableCell\r\n                                style={{ width: 180,\r\n                                  textAlign: 'left',\r\n                                  fontSize: 12,\r\n                                  borderBottom: 'none',\r\n                                }}\r\n                              >\r\n                                <textarea disabled={projectPMO[0] === 'N' ? 'disabled' : null }\r\n                                  style={{\r\n                                    height: 20,\r\n                                    width: 150,\r\n                                    resize: 'none',\r\n                                    fontSize: 12,\r\n                                    fontFamily: \"'Montserrat', sans-serif\",\r\n                                  }}\r\n                                  type=\"text\"\r\n                                  text-align=\"left\"\r\n                                  defaultValue={row.kpi_pmo_notes}\r\n                                  className=\"saInput\"\r\n                                  size=\"12\"\r\n                                  onBlur={(event) => {\r\n                                    handleChange({\r\n                                      value: event.target.value || 0,\r\n                                      kpi_desc: rows.kpi_desc,\r\n                                      project_id: row.project_id,\r\n                                      kpi_header_id: row.kpi_header_id,\r\n                                      kpi_detail_id: row.kpi_detail_id,\r\n                                      role: rows.role,\r\n                                      objectID: 'kpi_pmo_notes',\r\n                                    });\r\n\r\n                                    setDefaultHeight(event, '20px');\r\n                                  }}\r\n                                  onClick={(event) =>\r\n                                    setInputHeight(event, '20px')\r\n                                  }\r\n                                  onChange={(event) =>\r\n                                    setInputHeight(event, '20px')\r\n                                  }\r\n                                />\r\n                              </StyledTableCell>\r\n                            </TableRow>\r\n                          ))}\r\n\r\n                        <TableRow key={rows.kpi_desc}>\r\n                          <StyledTableCell style={{ width: 150,borderBottom: 'none'}}></StyledTableCell>\r\n                          <StyledTableCell style={{width: 300,textAlign: 'left'}} align=\"left\"><b>Total</b></StyledTableCell>\r\n                          <StyledTableCell style={{ width: 40,textAlign: 'left'}}>\r\n                            <b>\r\n                              {kpi\r\n                                .filter((row) => row.kpi_desc === rows.kpi_desc)\r\n                                .map((row) => row.kpi_max_points)\r\n                                .reduce(reducer)}\r\n                            </b>\r\n                          </StyledTableCell>\r\n                          <StyledTableCell\r\n                            id={rows}\r\n                            style={{  textAlign: 'left' }}>\r\n                            <b>\r\n                              {kpi\r\n                                .filter((row) => row.kpi_desc === rows.kpi_desc)\r\n                                .map((row) => row.POINTS || 0)\r\n                                .reduce(reducer, 0)}\r\n                            </b>\r\n                          </StyledTableCell>\r\n                          <StyledTableCell\r\n                            align=\"left\"\r\n                            style={{ textAlign: 'left' }}\r\n                          >\r\n                            <b>\r\n                              {kpi\r\n                                .filter((row) => row.kpi_desc === rows.kpi_desc)\r\n                                .map((row) => row.kpi_pmo_points || 0)\r\n                                .reduce(reducer, 0)}\r\n                            </b>\r\n                          </StyledTableCell>\r\n                          <StyledTableCell\r\n                            align=\"left\"\r\n                            style={{\r\n                              textAlign: 'left',\r\n                              borderBottom: 'none',\r\n                            }}\r\n                          ></StyledTableCell>\r\n                          <StyledTableCell\r\n                            align=\"left\"\r\n                            style={{\r\n                              maxWidth: 50,\r\n                              textAlign: 'left',\r\n                              borderBottom: 'none',\r\n                            }}\r\n                          ></StyledTableCell>\r\n                          <StyledTableCell\r\n                            align=\"left\"\r\n                            style={{\r\n                              textAlign: 'left',\r\n                              borderBottom: 'none',\r\n                            }}\r\n                          ></StyledTableCell>\r\n                        </TableRow>\r\n                      </TableBody>\r\n                    </Table>\r\n                  </StyledTableCell>\r\n                </TableRow>\r\n              ))}\r\n          </Table>\r\n        </TableContainer>\r\n        \r\n      </div>\r\n    );\r\n  } else {\r\n    return <div>Loading Please Wait</div>;\r\n  }\r\n}\r\nconst setInputHeight = (element, defaultHeight) => {\r\n  if (element) {\r\n    const target = element.target ? element.target : element;\r\n    target.style.height = defaultHeight;\r\n    target.style.height = `${target.scrollHeight}px`;\r\n  }\r\n};\r\nconst setDefaultHeight = (element, defaultHeight) => {\r\n  if (element) {\r\n    const target = element.target ? element.target : element;\r\n    target.style.height = defaultHeight;\r\n  }\r\n};\r\n\r\n//,parseInt(value[0])||0\r\n","\r\n\r\n\r\nimport React, { Component,useState } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport {  TableContainer, TableHead, Select, MenuItem } from \"@material-ui/core\";\r\n//import DatePicker from 'react-date-picker';\r\nimport { Link } from 'react-router-dom';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport '../App.css';\t\t\t\t\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   \r\nclass PMOInput extends Component {\r\n    \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {projects: [], isLoading: true,users: [],practices:[],\r\n                    act: 0,\r\n                    index: '',PROJECT_ID: \"\",\r\n                    PROJECT_NAME:\" \",\r\n                    PROJECT_DESCRIPTION:\" \",\r\n                    PROJECT_START_DATE:new Date(),\r\n                    PROJECT_END_DATE:new Date(),\r\n                    PROJECT_TYPE : \"\",\r\n                    PROJECT_METHODOLOGY :\"\",\r\n                    PROJECT_STATUS : \"\",\r\n                    INSERT_DATE:new Date().toISOString().substr(0,10),\r\n                    PRACTICE:\"\",\r\n                    PM_USERNAME:\"\",\r\n                    SA_USERNAME:\"\"};\r\n    this.remove = this.remove.bind(this);\r\n    this.onChangeProjectName = this.onChangeProjectName.bind(this);\r\n    this.onChangeDescription = this.onChangeDescription.bind(this);\r\n    this.onChangeStartDate = this.onChangeStartDate.bind(this);\r\n    this.onChangeEndDate = this.onChangeEndDate.bind(this);\r\n    this.onChangeType = this.onChangeType.bind(this);\r\n    this.onChangeMethodology = this.onChangeMethodology.bind(this);\r\n    this.onChangeStatus = this.onChangeStatus.bind(this);\r\n    this.onChangeInsertDate = this.onChangeInsertDate.bind(this);\r\n    this.onChangePractice = this.onChangePractice.bind(this);\r\n    this.onChangePM = this.onChangePM.bind(this);\r\n    this.onChangeSA = this.onChangeSA.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n  onChangeInsertDate(e){\r\n    this.setState({ INSERT_DATE: e.target.value})\r\n  }\r\n  onChangeStatus(e){\r\n    this.setState({ PROJECT_STATUS: e.target.value})\r\n  }\r\n  onChangeMethodology(e){\r\n    this.setState({ PROJECT_METHODOLOGY: e.target.value})\r\n  }\r\n  onChangeType(e){\r\n    this.setState({ PROJECT_TYPE: e.target.value})\r\n  }\r\n  onChangeProjectName(e) {\r\n    this.setState({ PROJECT_NAME: e.target.value})\r\n  }\r\n  onChangeDescription(e) {\r\n    this.setState({ PROJECT_DESCRIPTION: e.target.value})\r\n  }\r\n  onChangeStartDate(date) {\r\n    this.setState({ PROJECT_START_DATE: date})\r\n  }\r\n  onChangeEndDate(date) {\r\n    this.setState({ PROJECT_END_DATE: date})\r\n  }\r\n  onChangePractice(e) {\r\n        this.setState({ PRACTICE: e.target.value})\r\n  }\r\n  onChangePM(e) {\r\n        this.setState({ PM_USERNAME: e.target.value})\r\n  }\r\n  onChangeSA(e) {\r\n         this.setState({ SA_USERNAME: e.target.value})\r\n  }\r\n \r\n    onSubmit(e) {\r\n\t\t\t\t\t\t\t\t  \r\n        const project = {\r\n                    PROJECT_NAME: this.state.PROJECT_NAME,\r\n                    PROJECT_DESCRIPTION:this.state.PROJECT_DESCRIPTION,\r\n                    PROJECT_START_DATE:this.state.PROJECT_START_DATE.toISOString().slice(0, 10),\r\n                    PROJECT_END_DATE:this.state.PROJECT_END_DATE.toISOString().slice(0, 10),\r\n                    PROJECT_TYPE : this.state.PROJECT_TYPE,\r\n                    PROJECT_METHODOLOGY :this.state.PROJECT_METHODOLOGY,\r\n                    PROJECT_STATUS : this.state.PROJECT_STATUS,\r\n                    INSERT_DATE:this.state.INSERT_DATE,\r\n                    PRACTICE:this.state.PRACTICE,\r\n                    PM_USERNAME:this.state.PM_USERNAME,\r\n                    SA_USERNAME:this.state.SA_USERNAME\r\n                }\r\n        console.log(project);\r\n        if(this.state.act === 0){\r\n         fetch('http://20.84.70.197:5000/project-create', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(project),\r\n        }).then(response => response.json())\r\n        .then(data => {\r\n            //console.log(\"Success:\", data);\r\n            //this.getProjects();\r\n            //this.componentDidMount();\r\n        })\r\n        .catch((error) => {\r\n            console.error('Error:', error);\r\n        });\r\n    }\r\n    else{\r\n        fetch('http://20.84.70.197:5000/project-update', {\r\n            method: 'PUT', // or 'PUT'\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                PROJECT_ID: this.state.PROJECT_ID,\r\n                PROJECT_NAME: this.state.PROJECT_NAME,\r\n                PROJECT_DESCRIPTION:this.state.PROJECT_DESCRIPTION,\r\n                PROJECT_START_DATE:this.state.PROJECT_START_DATE.toISOString().slice(0, 10),\r\n                PROJECT_END_DATE:this.state.PROJECT_END_DATE.toISOString().slice(0, 10),\r\n                PROJECT_TYPE : this.state.PROJECT_TYPE,\r\n                PROJECT_METHODOLOGY :this.state.PROJECT_METHODOLOGY,\r\n                PROJECT_STATUS : this.state.PROJECT_STATUS,\r\n                INSERT_DATE:this.state.INSERT_DATE,\r\n                PRACTICE:this.state.PRACTICE,\r\n                PM_USERNAME:this.state.PM_USERNAME,\r\n                SA_USERNAME:this.state.SA_USERNAME\r\n            }),\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(\"Success:\", data);\r\n              //  alert(data);\r\n                this.getProjects();\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error:', error);\r\n            });\r\n    }\r\n        this.setState({act:0});\r\n       // this.props.history.push('/pmoInput');\r\n        }\r\n\r\n  componentDidMount() {\r\n    this.setState({isLoading: true});\r\n    this.getProjects();\r\n\r\n      fetch('http://20.84.70.197:5000/get-users/')\r\n      .then(response => response.json())\r\n      .then(data => this.setState({users: data}));\r\n\r\n      fetch('http://20.84.70.197:5000/get-practice/')\r\n      .then(response => response.json())\r\n      .then(data => this.setState({practices: data}));\r\n  }\r\n\r\n  getProjects=()=>{\r\n    fetch('http://20.84.70.197:5000/get-projects/')\r\n    .then(response => response.json())\r\n    .then(data => this.setState({projects: data, isLoading: false}));\r\n\r\n  }\r\n\r\n  handleEdit(id){\r\n      let projects=this.state.projects[id];\t\t\t\t\t\t\t\t\t\t\t  \t\t\t\t\t\t\t\t\t\t\t\r\n      let startDateParts = projects.PROJECT_START_DATE.split(\"-\");\r\n      let endDateParts = projects.PROJECT_END_DATE.split(\"-\");\t\t\t\t\t\t\t\t\t\t\t\t\r\n      this.state.PROJECT_NAME=projects.PROJECT_NAME;\r\n      this.state.PROJECT_DESCRIPTION= projects.PROJECT_DESCRIPTION ;          \r\n      this.state.PROJECT_START_DATE= new Date(startDateParts[2], startDateParts[1] - 1, +startDateParts[0]); \r\n      this.state.PROJECT_END_DATE=new Date(endDateParts[2]++, endDateParts[1] - 1, +endDateParts[0]);          \r\n      this.state.PROJECT_TYPE= projects.PROJECT_TYPE ;          \r\n      this.state.PROJECT_METHODOLOGY=projects.PROJECT_METHODOLOGY;           \r\n      this.state.PROJECT_STATUS= projects.PROJECT_STATUS;          \r\n       this.state.INSERT_DATE= projects.INSERT_DATE ;          \r\n      this.state.PRACTICE=  projects.PRACTICE;         \r\n      this.state.PM_USERNAME= projects.PM_USERNAME;          \r\n      this.state.SA_USERNAME=projects.SA_USERNAME;\r\n      this.setState({act:1,index:id,PROJECT_ID:projects.PROJECT_ID});\r\n\r\n  }\r\n\r\n   async remove(PROJECT_ID) {\r\n    await fetch(`http://20.84.70.197:5000/get-project/${PROJECT_ID}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(() => {\r\n      let updatedProjects = [...this.state.projects].filter(i => i.PROJECT_ID !== PROJECT_ID);\r\n      this.setState({projects: updatedProjects});\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {projects, isLoading,users,practices} = this.state;\r\n    if (isLoading) {\r\n      return <p>Loading...</p>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"projectList\">\r\n        <h3 align='center'>Projects</h3>\r\n            <TableContainer component={Paper} >\r\n                <Table  >\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <StyledTableCell   align=\"left\"><b>Action</b></StyledTableCell>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \r\n                            <StyledTableCell  align=\"left\"><b>Project Name</b></StyledTableCell>\r\n                            <StyledTableCell  align=\"left\"><b>Description</b></StyledTableCell>\r\n                            <StyledTableCell  align=\"left\"><b>Start Date</b></StyledTableCell>\r\n                            <StyledTableCell   align=\"left\"><b>End Date</b></StyledTableCell>\r\n                            <StyledTableCell   align=\"left\"><b>Type</b></StyledTableCell>\r\n                            <StyledTableCell   align=\"left\"><b>Methodology</b></StyledTableCell>\r\n                            <StyledTableCell   align=\"left\"><b>Status</b></StyledTableCell>\r\n                            <StyledTableCell   align=\"left\"><b>Practice</b></StyledTableCell>\r\n                            <StyledTableCell   align=\"left\"><b>Project Manager</b></StyledTableCell>\r\n                            <StyledTableCell   align=\"left\"><b>Solution Architect</b></StyledTableCell>\r\n\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                    <StyledTableRow >\r\n                    <StyledTableCell component=\"th\" align=\"left\" scope=\"row\">\r\n                                     <td><button color=\"primary\" type=\"submit\" onClick={()=>{this.onSubmit()}}>{this.state.PROJECT_ID === '' ? 'Add' : 'Save'}</button></td>\r\n                    </StyledTableCell>\r\n                    <StyledTableCell component=\"th\" scope=\"row\" style={{width: 10}} > <td><input type=\"text\" style={{width: 70}}  className=\"form-control\" value={this.state.PROJECT_NAME}\r\nonChange={this.onChangeProjectName}/></td></StyledTableCell>\r\n                                <StyledTableCell component=\"th\" scope=\"row\"> <td><input type=\"text\" style={{width: 60}} className=\"form-control\" value={this.state.PROJECT_DESCRIPTION}\r\nonChange={this.onChangeDescription}/></td> </StyledTableCell>\r\n                                <StyledTableCell component=\"th\"  scope=\"row\"><td>\r\n                                <DatePicker className='date-input-field' selected={this.state.PROJECT_START_DATE}  onChange={this.onChangeStartDate}  name=\"startDate\"  dateFormat=\"dd-MM-yyyy\"/>\r\n</td> </StyledTableCell>              \r\n                                <StyledTableCell component=\"th\" scope=\"row\"><td>\r\n                                <DatePicker className='date-input-field' selected={this.state.PROJECT_END_DATE}  onChange={this.onChangeEndDate}  name=\"endDate\"  dateFormat=\"dd-MM-yyyy\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n                                  </td> </StyledTableCell>\r\n                                <StyledTableCell component=\"th\" scope=\"row\"><td>\r\n                                <Select id=\"project_type\" style={{width: 30,fontSize:12}} value={this.state.PROJECT_TYPE}  onChange={this.onChangeType}>\r\n                                  <MenuItem style={{fontSize:12}} value={\"TM\"}>{\"TM\"}</MenuItem>\r\n                                  <MenuItem style={{fontSize:12}} value={\"FP\"}>{\"FP\"}</MenuItem>\r\n                                </Select></td> </StyledTableCell>\r\n                                <StyledTableCell component=\"th\" scope=\"row\"><td> \r\n                                 <Select id=\"demo-simple-select4\" style={{width: 90,fontSize:12}} value={this.state.PROJECT_METHODOLOGY}  onChange={this.onChangeMethodology}>\r\n                                  <MenuItem style={{fontSize:12}} value={\"AGILE\"}>{\"AGILE\"}</MenuItem>\r\n                                  <MenuItem style={{fontSize:12}} value={\"WATERFALL\"}>{\"WATERFALL\"}</MenuItem>\r\n                                     </Select></td></StyledTableCell>\r\n                                 <StyledTableCell component=\"th\" scope=\"row\"><td>\r\n                                 <Select id=\"status\" style={{width: 70,fontSize:12}} value={this.state.PROJECT_STATUS}  onChange={this.onChangeStatus}>\r\n                                  <MenuItem style={{fontSize:12}} value={\"OPEN\"}>{\"OPEN\"}</MenuItem>\r\n                                  <MenuItem style={{fontSize:12}} value={\"ON-HOLD\"}>{\"ON-HOLD\"}</MenuItem>\r\n                                  <MenuItem style={{fontSize:12}} value={\"CLOSED\"}>{\"CLOSED\"}</MenuItem>\r\n                                </Select></td> </StyledTableCell>\r\n                                <StyledTableCell component=\"th\" scope=\"row\"> <td>\r\n                                <Select  style={{fontSize:12}} id=\"demo-simple-select1\" value={this.state.PRACTICE}\r\n                 onChange={this.onChangePractice} >{practices.map((data) => (<MenuItem value={data.PRACTICE_ID}>{`${data.practice} - ${data.location}`}</MenuItem>))}\r\n                 </Select>      </td> </StyledTableCell>\r\n                                <StyledTableCell component=\"th\" scope=\"row\"> <td>\r\n                                <Select id=\"demo-simple-select2\" style={{fontSize:12}} value={this.state.PM_USERNAME}\r\n                                     onChange={this.onChangePM}>\r\n                                  {users.map((data) => (<MenuItem value={data.user_name}>{data.user_name}</MenuItem>))}\r\n                                     </Select> \r\n                                   </td> </StyledTableCell>\r\n                                <StyledTableCell component=\"th\" scope=\"row\"> <td>\r\n                                <Select  id=\"demo-simple-select3\" style={{fontSize:12}} value={this.state.SA_USERNAME}\r\n                                     onChange={this.onChangeSA}>\r\n                                  {users.map((data) => (<MenuItem value={data.user_name}>{data.user_name}</MenuItem>))}\r\n                                     </Select> \r\n                                    </td> </StyledTableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t \r\n                     </StyledTableRow>\r\n\r\n                        {projects.map((data,i) => (\r\n                            <StyledTableRow key={i}>\r\n                              <StyledTableCell component=\"th\" scope=\"row\"> <td>\r\n                               <ButtonGroup size=\"5px\" width=\"5px\">\r\n                              {/* <Button size=\"5px\" color=\"primary\" tag={Link} to={\"/projects/\" + data.PROJECT_ID}>Edit</Button> */}\r\n                              <button color=\"primary\" type=\"submit\" onClick={()=>{this.handleEdit(i)}}>Edit</button>\r\n                                </ButtonGroup></td>\r\n                                </StyledTableCell>\r\n                                <StyledTableCell component=\"th\" scope=\"row\"><td>{data.PROJECT_NAME}</td> </StyledTableCell>\r\n                                <StyledTableCell component=\"th\" scope=\"row\"><td>{data.PROJECT_DESCRIPTION}</td> </StyledTableCell>\r\n                                <StyledTableCell component=\"th\" scope=\"row\"><td>{data.PROJECT_START_DATE}</td> </StyledTableCell>              \r\n                                <StyledTableCell component=\"th\" scope=\"row\"> <td>{data.PROJECT_END_DATE}</td> </StyledTableCell>\r\n                                <StyledTableCell component=\"th\" scope=\"row\"> <td>{data.PROJECT_TYPE}</td> </StyledTableCell>\r\n                                <StyledTableCell component=\"th\" scope=\"row\"> <td>{data.PROJECT_METHODOLOGY}</td> </StyledTableCell>\r\n                                <StyledTableCell component=\"th\" scope=\"row\"> <td>{data.PROJECT_STATUS}</td> </StyledTableCell>\r\n                                <StyledTableCell component=\"th\" scope=\"row\"> <td>{data.practice_detail}</td> </StyledTableCell>\r\n                                <StyledTableCell component=\"th\" scope=\"row\"> <td>{data.PM_USERNAME}</td> </StyledTableCell>\r\n                                <StyledTableCell component=\"th\" scope=\"row\"> <td>{data.SA_USERNAME}</td> </StyledTableCell>     \r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t\t \r\n\t\t\t\t\t\t\t\t\t\t \r\n                            </StyledTableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n\t\r\n\t\t   \r\n        </div >\r\n    );\r\n\r\n\r\n  }\r\n}\r\n\r\n\t\t\t\t\t\t   \r\n\r\n\r\nexport default PMOInput;\r\n\r\nconst InputField = (prop) => {\r\n    const [value, setValue] = useState(prop.defaultValue);\r\n    return (\r\n        <input\r\n            value={value}\r\n            style={{width:\"50px\",fontFamily:\"'Montserrat', sans-serif\"}}\r\n            type=\"number\" size=\"1\"\r\n            onChange={(e) => {\r\n                setValue(e.target.value);\r\n                prop.getValue(e.target.value);\r\n            }}\r\n            onKeyPress={prop.onChange}\r\n        />\r\n    );\r\n};\r\nconst InputText = (prop) => {\r\n    const [value, setValue] = useState(prop.defaultValue);\r\n    return (\r\n        <select key = {prop.key}\r\n            value = {value}\r\n            style={{width:'92px',fontFamily:\"'Montserrat', sans-serif\"}}\r\n            onChange={(e) => {\r\n                setValue(e.target.value);\r\n                prop.getValue(e.target.value);\r\n            }}\r\n            onKeyPress={prop.onKeyPress}\r\n        >{prop.arr.map(rows =>(\r\n            <option value={rows}>{rows}</option>\r\n        ))}\r\n        </select>\r\n    );\r\n};\r\nconst InputText1 = (prop) => {\r\n    const [value, setValue] = useState(prop.defaultValue);\r\n    return (\r\n        <select key = {prop.key}\r\n            value = {value}\r\n            style={{width:'45px',fontFamily:\"'Montserrat', sans-serif\"}}\r\n            onChange={(e) => {\r\n                setValue(e.target.value);\r\n                prop.getValue(e.target.value);\r\n            }}\r\n            onKeyPress={prop.onKeyPress}\r\n        >{prop.arr.map(rows =>(\r\n            <option value={rows}>{rows}</option>\r\n        ))}\r\n        </select>\r\n    );\r\n};\r\nconst InputText2 = (prop) => {\r\n    const [value, setValue] = useState(prop.defaultValue);\r\n    return (\r\n        <select key = {prop.key}\r\n            value = {value}\r\n            style={{width:'110px',fontFamily:\"'Montserrat', sans-serif\"}}\r\n            onChange={(e) => {\r\n                setValue(e.target.value);\r\n                prop.getValue(e.target.value);\r\n            }}\r\n            onKeyPress={prop.onKeyPress}\r\n        >{prop.arr.map(rows =>(\r\n            <option value={rows}>{rows}</option>\r\n        ))}\r\n        </select>\r\n    );\r\n};\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: '#b31317',\r\n        color: 'white',\r\n        fontFamily:\"'Montserrat', sans-serif\"\r\n    },\r\n    body: {\r\n\r\n        fontSize: 14,\r\n        fontFamily:\"'Montserrat', sans-serif\"\r\n    },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: theme.palette.action.hover,\r\n        },\r\n    table:{    \r\n        minWidth:700\r\n    }\r\n\r\n    },\r\n}))(TableRow);","\r\nimport { Button, Table, TableContainer, TableHead } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { withStyles,makeStyles } from '@material-ui/core/styles';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n//import { render } from '@testing-library/react';\r\n\r\n\r\nconst PMInput = (props) => {\r\n    const [pminputs, setpminputs] = useState([]);\r\n    const [pmValues, setPmValues] = useState({});\r\n    //\r\n    const projectId = props.data;\r\n    //const classes = useStyles();\r\n    useEffect(() => {\r\n        getdata();\r\n    }, []);\r\n\r\n    async function getdata() {\r\n        fetch(`http://20.84.70.197:5000/pm-input/${projectId}`)\r\n            .then((resp) => resp.json())\r\n            .then((json) => {\r\n                 json.push({ PROJECT_ID: json[0].PROJECT_ID,\r\n                    PROJECT_COMPLETE_PERCENT: 0,\r\n                    PROJECT_FIN_ACT_BUD: 0,\r\n                    PROJECT_FIN_FCT_BUD: 0,\r\n                    PROJECT_MILESTONE:\"\",\r\n                    PROJECT_DETAIL_ID: -1\r\n\r\n                });\r\n                setpminputs(json);\r\n            });\r\n    }\r\n///   http://20.84.70.197:5000/pminput-create\r\n    const saveData = () => {\r\n        console.log(pmValues);\r\n        let url = 'http://20.84.70.197:5000/pm-input';\r\n        let method = 'put';\r\n\r\n        if(pmValues.PROJECT_DETAIL_ID == -1)\r\n        {\r\n            url = 'http://20.84.70.197:5000/pminput-create';\r\n            method = 'post';\r\n        }\r\n\r\n        fetch(url, {\r\n            method: method, // or 'PUT'\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n\r\n                PROJECT_ID: pmValues.PROJECT_ID,\r\n                PROJECT_COMPLETE_PERCENT: pmValues.PROJECT_COMPLETE_PERCENT,\r\n                PROJECT_FIN_ACT_BUD: pmValues.PROJECT_FIN_ACT_BUD,\r\n                PROJECT_FIN_FCT_BUD: pmValues.PROJECT_FIN_FCT_BUD,\r\n                PROJECT_MILESTONE:pmValues.PROJECT_MILESTONE,\r\n                PROJECT_DETAIL_ID: pmValues.PROJECT_DETAIL_ID\r\n            }),\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(\"Success:\", data);\r\n                getdata();\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error:', error);\r\n            });\r\n\r\n        console.log(\"Hello\");\r\n        // get api\r\n    };\r\n    const deleteData = (i) => {\r\n        let input=pminputs[i];\r\n        console.log(pminputs);\r\n        let method = 'post';\r\n        fetch('http://20.84.70.197:5000/pm-input-delete', {\r\n            method: 'PUT', // or 'PUT'\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                PROJECT_ID: input.PROJECT_ID,\r\n                PROJECT_DETAIL_ID: input.PROJECT_DETAIL_ID\r\n            }),\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(\"Success:\", data);\r\n                getdata();\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error:', error);\r\n            });\r\n\r\n        console.log(\"Hello\");\r\n        // get api\r\n    };\r\n    \r\n\r\n    return (\r\n        <div className=\"pmInput\"  style={{width: '95%'}} size=\"small\">\r\n\r\n            <h3>Project Manager Input</h3>\r\n            <TableContainer  component={Paper}>\r\n                <Table >\r\n                    <TableHead>\r\n                        <TableRow >\r\n                            <StyledTableCell style={{width: '5%'}} align=\"left\"><b>Actions</b></StyledTableCell>\r\n\r\n                            <StyledTableCell style={{width: '10%'}} align=\"left\"><b>Project</b></StyledTableCell>\r\n                            <StyledTableCell style={{width: '15%'}} align=\"left\"><b>Milestone</b></StyledTableCell>\r\n                            <StyledTableCell style={{width: '5%'}} align=\"left\"><b>% Completion</b></StyledTableCell>\r\n                            <StyledTableCell style={{width: '5%'}} align=\"left\"><b>% Fin (Act/Bud)</b></StyledTableCell>\r\n                            <StyledTableCell style={{width: '5%'}} align=\"left\"><b>% Fin (Fct/Bud)</b></StyledTableCell>\r\n                            <StyledTableCell style={{width: '10%'}} align=\"left\"><b>Last Update Date</b></StyledTableCell>\r\n                            <StyledTableCell style={{width: '10%'}} align=\"left\"><b>Last Update By</b></StyledTableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody >\r\n                        {pminputs.map((data,i) => (\r\n                            <StyledTableRow key={data.PROJECT_ID}>\r\n                                  <StyledTableCell component=\"th\" scope=\"row\" style={{paddingLeft:0,witdh:'5%'}}>\r\n                                    <td>\r\n                                        <Button  onClick={()=>{saveData()}}>\r\n                                            {data.PROJECT_DETAIL_ID == -1 ? 'Add' : 'Save'}\r\n                                            </Button>\r\n                                            <Button  onClick={()=>{deleteData(i)}}>\r\n                                            {data.PROJECT_DETAIL_ID == -1 ? '' : 'Delete'}\r\n                                            </Button></td>\r\n                                        </StyledTableCell>\r\n                                <StyledTableCell component=\"th\" scope=\"row\" style={{width: '10%'}}>\r\n                                    <td>{data.PROJECT_NAME}</td> </StyledTableCell>\r\n                                <StyledTableCell component=\"th\"  scope=\"row\" style={{width: '15%'}}>\r\n                                    <td><InputText\r\n                                        defaultValue={data.PROJECT_MILESTONE}\r\n                                        getValue={(value) => {\r\n                                            setPmValues(\r\n                                                Object.assign({},{...data}, {...pmValues}, {PROJECT_MILESTONE: value}, {PROJECT_DETAIL_ID: data.PROJECT_DETAIL_ID})\r\n                                                );\r\n                                        }}\r\n                                       \r\n                                    /></td> </StyledTableCell>\r\n                                <StyledTableCell component=\"th\" style={{width: '5%'}} scope=\"row\">\r\n                                    <td><InputField style={{width: 5}}\r\n                                        defaultValue={data.PROJECT_COMPLETE_PERCENT}\r\n                                        getValue={(value) => {\r\n                                            setPmValues(\r\n                                                Object.assign({},{...data}, {...pmValues}, {PROJECT_COMPLETE_PERCENT: value}, {PROJECT_DETAIL_ID: data.PROJECT_DETAIL_ID})\r\n                                                );\r\n                                        }}\r\n                                       \r\n                                    /></td> </StyledTableCell>\r\n                                <StyledTableCell component=\"th\" scope=\"row\" style={{width: '5%'}}>\r\n                                    <td><InputField  style={{width: '5%'}}\r\n                                        defaultValue={data.PROJECT_FIN_ACT_BUD}\r\n                                        getValue={(value) => {\r\n                                            setPmValues(\r\n                                                Object.assign({},{...data}, {...pmValues}, {PROJECT_FIN_ACT_BUD: value}, {PROJECT_DETAIL_ID: data.PROJECT_DETAIL_ID})\r\n                                                );\r\n                                        }}\r\n                                      \r\n                                    /></td> </StyledTableCell>\r\n                                <StyledTableCell component=\"th\" scope=\"row\" style={{width: '5%'}}>\r\n                                    <td><InputField style={{width: '5%'}}\r\n                                        defaultValue={data.PROJECT_FIN_FCT_BUD}\r\n                                        getValue={(value) => {\r\n                                            setPmValues(\r\n                                                Object.assign({},{...data}, {...pmValues}, {PROJECT_FIN_FCT_BUD: value}, {PROJECT_DETAIL_ID: data.PROJECT_DETAIL_ID})\r\n                                                );\r\n                                        }}\r\n                                       \r\n                                    /></td> </StyledTableCell>\r\n                                <StyledTableCell component=\"th\" scope=\"row\" style={{width: '10%'}}>\r\n                                    <td>{data.LAST_UPDATE_DATE===undefined || data.LAST_UPDATE_DATE===null?\"2021-01-20\":data.LAST_UPDATE_DATE.split(\"T\")[0]}</td> </StyledTableCell>\r\n                                <StyledTableCell component=\"th\" scope=\"row\" style={{width: '10%'}}>\r\n                                    <td>himanshu</td> </StyledTableCell>\r\n                                {/* <StyledTableCell align=\"left\">{data.project_milestone}</StyledTableCell>\r\n                                <StyledTableCell align=\"left\">{data.project_type}</StyledTableCell>\r\n                                <StyledTableCell align=\"left\">{data.project_complete_percent}</StyledTableCell>\r\n                                <StyledTableCell align=\"left\"><Button size=\"small\" ><u>{data.project_name}</u></Button></StyledTableCell> */}\r\n                            </StyledTableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </div >\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default PMInput;\r\n\r\nconst InputField = (prop) => {\r\n    const [value, setValue] = useState(prop.defaultValue);\r\n    return (\r\n        <input\r\n            value={value}\r\n            style={{width:\"40px\",fontFamily:\"'Montserrat', sans-serif\"}}\r\n            type=\"number\" size=\"1\"\r\n            onChange={(e) => {\r\n                setValue(e.target.value);\r\n                prop.getValue(e.target.value);\r\n            }}\r\n            onKeyPress={prop.onChange}\r\n        />\r\n    );\r\n};\r\nconst InputText = (prop) => {\r\n    const [value, setValue] = useState(prop.defaultValue);\r\n    return (\r\n        <input\r\n            value={value}\r\n            type=\"text\" style={{width:'80px',fontFamily:\"'Montserrat', sans-serif\"}}\r\n            onChange={(e) => {\r\n                setValue(e.target.value);\r\n                prop.getValue(e.target.value);\r\n            }}\r\n            onKeyPress={prop.onKeyPress}\r\n        />\r\n    );\r\n};\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: '#b31317',\r\n        color: 'white',\r\n        fontFamily:\"'Montserrat', sans-serif\"\r\n    },\r\n    body: {\r\n        fontSize: 12,\r\n        fontFamily:\"'Montserrat', sans-serif\"\r\n    },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: theme.palette.action.hover,\r\n            \r\n        },\r\n    },\r\n}))(TableRow);\r\n\r\nconst useStyles = makeStyles({\r\n    Table: {\r\n      minWidth: 600,\r\n    },\r\n    container: {\r\n      maxHeight: 600\r\n    }\r\n  });","import React, { useState, useEffect, useLayoutEffect } from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: '#b31317',\r\n    color: 'white',\r\n    fontFamily: \"'Montserrat', sans-serif\",\r\n    fontSize: 11,\r\n  },\r\n  body: {\r\n    fontSize: 11,\r\n    height: 50,\r\n    padding: 3,\r\n    fontFamily: \"'Montserrat', sans-serif\",\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({}))(TableRow);\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n  container: {\r\n    maxHeight: 500,\r\n  },\r\n});\r\n\r\nexport default function PMKPI(props) {\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = useState(false);\r\n  const [pmonotes, pmoNotes] = useState([0, 0, 0, 0, 0]);\r\n  const [key, setKey] = useState('KPI');\r\n\r\n  const [kpi, setKpi] = useState([]);\r\n\r\n  const reducer = (accumulator, currentValue) =>\r\n    parseFloat(accumulator) + parseFloat(currentValue);\r\n\r\n  useEffect(() => {\r\n    //alert(props.data[0]+\"..\"+props.data[1]);\r\n    fetch('http://20.84.70.197:5000/getKPI', {\r\n      method: 'POST', // or 'PUT'\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        username: props.data[0],\r\n        PROJECT_ID: props.data[1],\r\n      }),\r\n    })\r\n      .then((resp) => resp.json())\r\n      .then((json) => {\r\n        localStorage.setItem('KPI', JSON.stringify(json));\r\n        const tableData = json.map((item) => {\r\n          return { ...item, editPMNotes: false, isRowUpdated: false };\r\n        });\r\n        setKpi(tableData);\r\n        console.log('hi', tableData);\r\n        setLoading(true);\r\n      });\r\n  }, []);\r\n\r\n\r\n  if (loading) {\r\n    // let values = JSON.parse(localStorage.getItem('KPI'));\r\n\r\n    let maintable = JSON.parse(localStorage.getItem('tables'));\r\n    //const projectPMO =['Y'];\r\n    const projectPMO = maintable.map((item) => item.PMO).filter((value, index, self) => self.indexOf(value) === index);\r\n    console.log('projectPMO', projectPMO);\r\n   // alert(projectPMO);\r\n\r\n    const roleName = kpi\r\n      .map((item) => item.ROLE)\r\n      .filter((value, index, self) => self.indexOf(value) === index);\r\n\r\n\r\n\r\n    const unique = [];\r\n    const map = new Map();\r\n    for (let i of kpi) {\r\n      const mapKey= `${i.MILESTONE_ID}~${i.CYCLE_ID}`\r\n      if (!map.has(mapKey)) {\r\n        map.set(mapKey, true);\r\n        unique.push({\r\n          MILESTONE_ID: i.MILESTONE_ID,\r\n          MILESTONE: i.MILESTONE,\r\n          CYCLE_ID: i.CYCLE_ID,\r\n          KPI_WEIGHT: i.KPI_WEIGHT,\r\n          KPI_SCORE: i.KPI_SCORE,\r\n          role: i.ROLE,\r\n        });\r\n      }\r\n    }\r\n    console.log(roleName[0]);\r\n\r\n    const handleChange = (change) => {\r\n   \r\n\r\n      const updateeKPI = kpi.map((item) => {\r\n        if (\r\n          item.PROJECT_ID === change.PROJECT_ID &&\r\n          item.MILESTONE_ID === change.MILESTONE_ID &&\r\n          item.PARAMETER_ID === change.PARAMETER_ID &&\r\n          item.CYCLE_ID === change.CYCLE_ID\r\n        ) {\r\n          item[change.objectID] = change.value;\r\n          item.isRowUpdated = true;\r\n          item.KPI_SCORE=(   ((kpi.filter( (row) => row.MILESTONE === item.MILESTONE && row.CYCLE_ID===item.CYCLE_ID)\r\n          .map((row) => row.KPI_PMO_POINTS || 0).reduce(reducer, 0) ) /\r\n            kpi.filter((row) => row.MILESTONE === item.MILESTONE && row.CYCLE_ID===item.CYCLE_ID)\r\n          .map((row) => row.MAX_SCORE).reduce(reducer) )* item.KPI_WEIGHT);\r\n          if( item.KPI_SCORE===0){\r\n            item.KPI_SCORE=(   ((kpi.filter( (row) => row.MILESTONE === item.MILESTONE && row.CYCLE_ID===item.CYCLE_ID)\r\n            .map((row) => row.KPI_POINTS || 0).reduce(reducer, 0) ) /\r\n              kpi.filter((row) => row.MILESTONE === item.MILESTONE && row.CYCLE_ID===item.CYCLE_ID)\r\n            .map((row) => row.MAX_SCORE).reduce(reducer) )* item.KPI_WEIGHT);\r\n\r\n          }\r\n          //alert(   (kpi.filter( (row) => row.MILESTONE === item.MILESTONE).map((row) => row.KPI_PMO_POINTS || 0).reduce(reducer, 0) * item.KPI_WEIGHT) /100);\r\n      \r\n         \r\n          return { ...item };\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n      setKpi(updateeKPI);\r\n    };\r\n\r\n    const handleEditIconClick = (change) => {\r\n      const updateeKPI = kpi.map((item) => {\r\n        if (\r\n          item.PROJECT_ID === change.PROJECT_ID &&\r\n          item.MILESTONE_ID === change.MILESTONE_ID &&\r\n          item.PARAMETER_ID === change.PARAMETER_ID &&\r\n          item.CYCLE_ID === change.CYCLE_ID\r\n        ) {\r\n          return { ...item, editPMNotes: true };\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n      setKpi(updateeKPI);\r\n    };\r\n\r\n    const handleSave = () => {\r\n      console.log('saving data', JSON.stringify({kpi}));\r\n      fetch('http://20.84.70.197:5000/prjkpiupdate', {\r\n        method: 'PUT', // or 'PUT'\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({kpi}),\r\n      })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          //console.log('Success:', data);\r\n            console.log('.....',data);\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error:', error);\r\n        });\r\n  \r\n\r\n      //make api call to update data\r\n    };\r\n\r\n    return (\r\n      //   <Tabs\r\n      //   id=\"controlled-tab-example\"\r\n      //   activeKey={key === 'KPI'?`${roleName[0]} ${key}`:'Home'}\r\n      //   onSelect={(k) => setKey(k)}\r\n      // >\r\n\r\n      //   <Tab eventKey=\"Home\" title=\"Home\"><Tables data ={props.data[0]}/></Tab>\r\n\r\n      //   <Tab eventKey=\"SA KPI\" title=\"SA KPI\">\r\n      //{maintable.filter((row)=>row.PROJECT_ID===projectStore.name?row.project_name:null)}\r\n     // <Button onClick={handleSave}>Save</Button>\r\n      <div className=\"kpiTable\">\r\n        <button color=\"primary\" type=\"submit\" onClick={handleSave}>SAVE</button>\r\n        \r\n        <TableContainer >\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <StyledTableCell  style={{ width: 180, textAlign: 'left' }}><b>Milestone</b></StyledTableCell>\r\n                <StyledTableCell  style={{ width: 330, textAlign: 'left' }}><b>Parameters</b></StyledTableCell>\r\n                <StyledTableCell  style={{ width: 30, textAlign: 'left' }}><b>Max Points</b></StyledTableCell>\r\n                <StyledTableCell  style={{ width: 40, textAlign: 'left' }}><b>PM Points</b></StyledTableCell>\r\n                <StyledTableCell  style={{ width: 40, textAlign: 'left' }}><b>PMO Points</b></StyledTableCell>\r\n                <StyledTableCell  style={{ width: 30, textAlign: 'left'}}><b>Weight </b>  </StyledTableCell>\r\n                <StyledTableCell style={{ width: 30, textAlign: 'left'}}><b> Score</b></StyledTableCell>\r\n                <StyledTableCell  style={{ width: 150, textAlign: 'left' }} ><b>PM Notes</b></StyledTableCell>\r\n                <StyledTableCell  style={{ maxWidth: 150, textAlign: 'left' }}> <b>PMO Notes</b></StyledTableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            {unique.filter((rows) => rows.role === 'PM' || rows.role === 'SA').map((rows) => (\r\n                <TableRow>\r\n                  <StyledTableCell colSpan=\"9\" style={{border:'1px solid black' }}>\r\n                <Table className={classes.table} aria-label=\"customized table\" style={{ border: 1 }}>\r\n                      <TableBody>\r\n                        {kpi.filter((row) => row.MILESTONE === rows.MILESTONE && row.CYCLE_ID===rows.CYCLE_ID ).map((row, i, arr) => (\r\n                            <TableRow key={row.PARAMETER_NAME}>\r\n                              {i == 0 ? (\r\n                              <StyledTableCell component=\"td\" rowSpan={arr.length} style={{ width: 150,textAlign: 'left'}}>\r\n                                <b>{rows.MILESTONE}</b></StyledTableCell>) : null}\r\n                              <StyledTableCell component=\"td\" style={{ width: 250,textAlign:'left'}}>\r\n                                {row.PARAMETER_NAME}</StyledTableCell>\r\n                              <StyledTableCell component=\"td\" style={{ width: 40, textAlign: 'left' }}>\r\n                                {row.MAX_SCORE}</StyledTableCell>\r\n                              <StyledTableCell component=\"td\" style={{ width: 50, textAlign: 'left' }}>\r\n                                <input type=\"text\" className=\"saInput\" defaultValue={row.KPI_POINTS || 0} size=\"1\" style={{ fontSize: 12, fontFamily: \"'Montserrat', sans-serif\" }}\r\n                                  onChange={(event) =>\r\n                                    handleChange({\r\n                                      value: event.target.value || 0,\r\n                                      MILESTONE: rows.MILESTONE,\r\n                                      PROJECT_ID: row.PROJECT_ID,\r\n                                      MILESTONE_ID: row.MILESTONE_ID,\r\n                                      PARAMETER_ID: row.PARAMETER_ID,\r\n                                      CYCLE_ID: row.CYCLE_ID,\r\n                                      role: rows.role,\r\n                                      objectID: 'KPI_POINTS',\r\n                                    })\r\n                                  }\r\n                                  disabled={row.ROLE === row.OWNER && row.PMO === 'N' ? null : 'disabled' }\r\n                                />\r\n                              </StyledTableCell>\r\n                              <StyledTableCell  component=\"td\" style={{ width: 50, textAlign: 'left' }}>\r\n                                <input  type={ row.PMO === 'N' ? 'hidden' : \"text\"}  className=\"saInput\" defaultValue={row.KPI_PMO_POINTS || 0} size=\"1\"\r\n                                  style={{ fontSize: 12,fontFamily: \"'Montserrat', sans-serif\"}}\r\n                                  onChange={(event) =>\r\n                                    handleChange({\r\n                                      value: event.target.value || 0,\r\n                                      MILESTONE: rows.MILESTONE,\r\n                                      PROJECT_ID: row.PROJECT_ID,\r\n                                      MILESTONE_ID: row.MILESTONE_ID,\r\n                                      PARAMETER_ID: row.PARAMETER_ID,\r\n                                      CYCLE_ID: row.CYCLE_ID,\r\n                                      role: rows.role,\r\n                                      objectID: 'KPI_PMO_POINTS',\r\n                                    })\r\n                                  }\r\n                                  disabled={\r\n                                    row.PMO === 'N' ? 'disabled' : null\r\n                                  }\r\n                                />\r\n                              </StyledTableCell>\r\n                              {i === 0 ? (\r\n                                <StyledTableCell component=\"td\" rowSpan={arr.length} style={{ width: 50, textAlign: 'center', borderBottom: 'none'}}>\r\n                                  {rows.KPI_WEIGHT}\r\n                                </StyledTableCell>\r\n                              ) : null}\r\n                              {i === 0 ? (\r\n                                <StyledTableCell  component=\"td\" rowSpan={arr.length} style={{ width: 50,textAlign: 'center',borderBottom: 'none'}}>  \r\n              \r\n  \r\n  {((kpi.filter( (row) => row.MILESTONE === rows.MILESTONE && row.CYCLE_ID===rows.CYCLE_ID)\r\n                                    .map((row) => row.KPI_PMO_POINTS || 0).reduce(reducer, 0) ) /\r\n                                      kpi.filter((row) => row.MILESTONE === rows.MILESTONE && row.CYCLE_ID===rows.CYCLE_ID)\r\n                                .map((row) => row.MAX_SCORE).reduce(reducer) )                            \r\n                                  * rows.KPI_WEIGHT ===0?\r\n                     ((kpi.filter( (row) => row.MILESTONE === rows.MILESTONE && row.CYCLE_ID===rows.CYCLE_ID)\r\n                                    .map((row) => row.KPI_POINTS || 0).reduce(reducer, 0) ) /\r\n                                      kpi.filter((row) => row.MILESTONE === rows.MILESTONE && row.CYCLE_ID===rows.CYCLE_ID)\r\n                                .map((row) => row.MAX_SCORE).reduce(reducer) )                            \r\n                                  * rows.KPI_WEIGHT :((kpi.filter( (row) => row.MILESTONE === rows.MILESTONE && row.CYCLE_ID===rows.CYCLE_ID)\r\n                                .map((row) => row.KPI_PMO_POINTS || 0).reduce(reducer, 0) ) /\r\n                                  kpi.filter((row) => row.MILESTONE === rows.MILESTONE && row.CYCLE_ID===rows.CYCLE_ID)\r\n                            .map((row) => row.MAX_SCORE).reduce(reducer) )                            \r\n                              * rows.KPI_WEIGHT}\r\n                   \r\n             \r\n\r\n                                </StyledTableCell>\r\n                              ) : null}\r\n                              <StyledTableCell style={{width: 180,textAlign: 'left',borderBottom: 'none'}}>\r\n                                {!row.editPMNotes && (\r\n                                  <>\r\n                                  <a style={{display: \"table-cell\"}} href={row.KPI_PM_NOTES} target=\"_blank\">{row.KPI_PM_NOTES}</a>\r\n                                    {row.PMO === 'N' && (\r\n                                      <IconButton\r\n                                        aria-label=\"account of current user\"\r\n                                        aria-controls=\"menu-appbar\"\r\n                                        aria-haspopup=\"true\"\r\n                                        color=\"inherit\"\r\n                                        onClick={(event) =>\r\n                                          handleEditIconClick({\r\n                                            MILESTONE: rows.MILESTONE,\r\n                                            PROJECT_ID: row.PROJECT_ID,\r\n                                            MILESTONE_ID: row.MILESTONE_ID,\r\n                                            PARAMETER_ID: row.PARAMETER_ID,\r\n                                            CYCLE_ID: row.CYCLE_ID\r\n                                          })\r\n                                        }\r\n                                      >\r\n                                        <CreateIcon />\r\n                                      </IconButton>\r\n                                    )}\r\n                                  </>\r\n                                )}\r\n                                {row.editPMNotes && (\r\n                                  <>\r\n                                    <textarea\r\n                                      style={{\r\n                                        height: 20,\r\n                                        width: 150,\r\n                                        resize: 'none',\r\n                                        fontSize: 12,\r\n                                        fontFamily: \"'Montserrat', sans-serif\",\r\n                                      }}\r\n                                      text-align=\"left\"\r\n                                      defaultValue={row.KPI_PM_NOTES}\r\n                                      className=\"saInput\"\r\n                                      onBlur={(event) => {\r\n                                        handleChange({\r\n                                          value: event.target.value || 0,\r\n                                          MILESTONE: rows.MILESTONE,\r\n                                          PROJECT_ID: row.PROJECT_ID,\r\n                                          MILESTONE_ID: row.MILESTONE_ID,\r\n                                          PARAMETER_ID: row.PARAMETER_ID,\r\n                                          CYCLE_ID:row.CYCLE_ID,\r\n                                          role: rows.role,\r\n                                          objectID: 'KPI_PM_NOTES',\r\n                                        });\r\n                                        setDefaultHeight(event, '20px');\r\n                                      }}\r\n                                      onClick={(event) =>\r\n                                        setInputHeight(event, '20px')\r\n                                      }\r\n                                      onChange={(event) =>\r\n                                        setInputHeight(event, '20px')\r\n                                      }\r\n                                    />\r\n                                  </>\r\n                                )}\r\n                              </StyledTableCell>\r\n                              <StyledTableCell\r\n                                style={{ width: 180,\r\n                                  textAlign: 'left',\r\n                                  fontSize: 12,\r\n                                  borderBottom: 'none',\r\n                                }}\r\n                              >\r\n                                <textarea disabled={row.PMO === 'N' ? 'disabled' : null }\r\n                                  style={{\r\n                                    height: 20,\r\n                                    width: 150,\r\n                                    resize: 'none',\r\n                                    fontSize: 12,\r\n                                    fontFamily: \"'Montserrat', sans-serif\",\r\n                                  }}\r\n                                  type=\"text\"\r\n                                  text-align=\"left\"\r\n                                  defaultValue={row.KPI_PMO_NOTES}\r\n                                  className=\"saInput\"\r\n                                  size=\"12\"\r\n                                  onBlur={(event) => {\r\n                                    handleChange({\r\n                                      value: event.target.value || 0,\r\n                                      MILESTONE: rows.MILESTONE,\r\n                                      PROJECT_ID: row.PROJECT_ID,\r\n                                      MILESTONE_ID: row.MILESTONE_ID,\r\n                                      PARAMETER_ID: row.PARAMETER_ID,\r\n                                      CYCLE_ID: row.CYCLE_ID,\r\n                                      role: rows.role,\r\n                                      objectID: 'KPI_PMO_NOTES',\r\n                                    });\r\n\r\n                                    setDefaultHeight(event, '20px');\r\n                                  }}\r\n                                  onClick={(event) =>\r\n                                    setInputHeight(event, '20px')\r\n                                  }\r\n                                  onChange={(event) =>\r\n                                    setInputHeight(event, '20px')\r\n                                  }\r\n                                />\r\n                              </StyledTableCell>\r\n                            </TableRow>\r\n                          ))}\r\n\r\n                        <TableRow key={rows.MILESTONE}>\r\n                          <StyledTableCell style={{ width: 150,borderBottom: 'none'}}></StyledTableCell>\r\n                          <StyledTableCell style={{width: 300,textAlign: 'left'}} align=\"left\"><b>Total</b></StyledTableCell>\r\n                          <StyledTableCell style={{ width: 40,textAlign: 'left'}}>\r\n                            <b>\r\n                              {kpi\r\n                                .filter((row) => row.MILESTONE === rows.MILESTONE && row.CYCLE_ID === rows.CYCLE_ID)\r\n                                .map((row) => row.MAX_SCORE)\r\n                                .reduce(reducer)}\r\n                            </b>\r\n                          </StyledTableCell>\r\n                          <StyledTableCell\r\n                            id={rows}\r\n                            style={{  textAlign: 'left' }}>\r\n                            <b>\r\n                              {kpi\r\n                                .filter((row) => row.MILESTONE === rows.MILESTONE && row.CYCLE_ID === rows.CYCLE_ID)\r\n                                .map((row) => row.KPI_POINTS || 0)\r\n                                .reduce(reducer, 0)}\r\n                            </b>\r\n                          </StyledTableCell>\r\n                          <StyledTableCell\r\n                            align=\"left\"  \r\n                            style={{ visibility: 'text',textAlign: 'left' }} >\r\n\r\n                            <b>\r\n                            {kpi\r\n                                .filter((row) => row.MILESTONE === rows.MILESTONE && row.CYCLE_ID===rows.CYCLE_ID)\r\n                                .map((row) => row.KPI_PMO_POINTS || 0)\r\n                                .reduce(reducer, 0)}\r\n                          \r\n                            </b>\r\n                          </StyledTableCell>\r\n                          <StyledTableCell\r\n                            align=\"left\"\r\n                            style={{\r\n                              textAlign: 'left',\r\n                              borderBottom: 'none',\r\n                            }}\r\n                          ></StyledTableCell>\r\n                          <StyledTableCell\r\n                            align=\"left\"\r\n                            style={{\r\n                              maxWidth: 50,\r\n                              textAlign: 'left',\r\n                              borderBottom: 'none',\r\n                            }}\r\n                          ></StyledTableCell>\r\n                          <StyledTableCell\r\n                            align=\"left\"\r\n                            style={{\r\n                              textAlign: 'left',\r\n                              borderBottom: 'none',\r\n                            }}\r\n                          ></StyledTableCell>\r\n                        </TableRow>\r\n                      </TableBody>\r\n                    </Table>\r\n                  </StyledTableCell>\r\n                </TableRow>\r\n              ))}\r\n          </Table>\r\n        </TableContainer>\r\n        \r\n      </div>\r\n    );\r\n  } else {\r\n    return <div>Loading Please Wait</div>;\r\n  }\r\n}\r\nconst setInputHeight = (element, defaultHeight) => {\r\n  if (element) {\r\n    const target = element.target ? element.target : element;\r\n    target.style.height = defaultHeight;\r\n    target.style.height = `${target.scrollHeight}px`;\r\n  }\r\n};\r\nconst setDefaultHeight = (element, defaultHeight) => {\r\n  if (element) {\r\n    const target = element.target ? element.target : element;\r\n    target.style.height = defaultHeight;\r\n  }\r\n};\r\n\r\n//,parseInt(value[0])||0\r\n","import react from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.info.main,\r\n    color: theme.palette.common.black,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 350,\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\n\r\n\r\nexport default function ShowData(props) {\r\n  const projectData = JSON.parse(localStorage.getItem('tables'));\r\n  console.log(projectData);\r\n  const classes = useStyles();\r\n  for (let i of projectData) {\r\n    if (props.data === i.project_name) {\r\n      console.log(\"I am In\");\r\n      return (\r\n        <div className=\"projectDetails\">\r\n          <div className=\"projectType\">\r\n            <Card className={classes.root} variant=\"outlined\">\r\n              <CardContent>\r\n                <Table className={classes.table} aria-label=\"customized table\">\r\n                  <TableBody>\r\n                    <TableRow>\r\n                      <StyledTableCell style={{ backgroundColor: \"#6ad4ff\" }}>Project Name</StyledTableCell>\r\n                      <StyledTableCell align=\"left\">{i.project_name}</StyledTableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <StyledTableCell style={{ backgroundColor: \"#78d8ff\" }}>Project Start Date</StyledTableCell>\r\n                      <StyledTableCell align=\"left\">{i.project_start_date}</StyledTableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <StyledTableCell style={{ backgroundColor: \"#87dcff\" }}>PM Name</StyledTableCell>\r\n                      <StyledTableCell align=\"left\">{i.PA_NAME1}</StyledTableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <StyledTableCell style={{ backgroundColor: \"#96e0ff\" }}>PM Email</StyledTableCell>\r\n                      <StyledTableCell align=\"left\">{i[\"max(PM_EMAIL)\"]}</StyledTableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <StyledTableCell style={{ backgroundColor: \"#a5e5ff\" }}>SA Name</StyledTableCell>\r\n                      <StyledTableCell align=\"left\">{i.SA_NAME1}</StyledTableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <StyledTableCell style={{ backgroundColor: \"#a5e5ff\" }}>SA Email</StyledTableCell>\r\n                      <StyledTableCell align=\"left\">{i[\"max(SA_EMAIL)\"]}</StyledTableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <StyledTableCell style={{ backgroundColor: \"#c3edff\" }}>Project Status</StyledTableCell>\r\n                      <StyledTableCell align=\"left\">{i.project_status}</StyledTableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <StyledTableCell style={{ backgroundColor: \"#d2f2ff\" }}>FP/TM</StyledTableCell>\r\n                      <StyledTableCell align=\"left\">{i.project_type}</StyledTableCell>\r\n                    </TableRow>\r\n                  </TableBody>\r\n                </Table>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n          <div className=\"projectBudget\">\r\n            <Card className={classes.root} variant=\"outlined\">\r\n              <CardContent>\r\n                <Table className={classes.table} aria-label=\"customized table\">\r\n                  <TableBody>\r\n                    <TableRow>\r\n                      <StyledTableCell style={{ backgroundColor: \"#6ad4ff\" }}>Project Milestone</StyledTableCell>\r\n                      <StyledTableCell align=\"left\">{i.project_milestone}</StyledTableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <StyledTableCell style={{ backgroundColor: \"#96e0ff\" }}>Project % Complete</StyledTableCell>\r\n                      <StyledTableCell align=\"left\">{i.project_complete_percent}</StyledTableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <StyledTableCell style={{ backgroundColor: \"#b4e9ff\" }}>Project Fin (Act/Bud)</StyledTableCell>\r\n                      <StyledTableCell align=\"left\">{i.project_fin_act_bud}</StyledTableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <StyledTableCell style={{ backgroundColor: \"#d2f2ff\" }}>Project Fin (Fct/Bud)</StyledTableCell>\r\n                      <StyledTableCell align=\"left\">{i.project_fin_fct_bud}</StyledTableCell>\r\n                    </TableRow>\r\n                  </TableBody>\r\n                </Table>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"projectDetails\">\r\n      <div className=\"projectType\">\r\n        <Card className={classes.root} variant=\"outlined\">\r\n          <CardContent>\r\n            <Table className={classes.table} aria-label=\"customized table\">\r\n              <TableBody>\r\n                <TableRow>\r\n                  <StyledTableCell style={{ backgroundColor: \"#6ad4ff\" }}>Project Name</StyledTableCell>\r\n                  <StyledTableCell align=\"left\">{projectData[0].project_name}</StyledTableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <StyledTableCell style={{ backgroundColor: \"#78d8ff\" }}>Project Start Date</StyledTableCell>\r\n                  <StyledTableCell align=\"left\">{projectData[0].project_start_date}</StyledTableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <StyledTableCell style={{ backgroundColor: \"#87dcff\" }}>PM Name</StyledTableCell>\r\n                  <StyledTableCell align=\"left\">{projectData[0].PA_NAME1}</StyledTableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <StyledTableCell style={{ backgroundColor: \"#96e0ff\" }}>PM Email</StyledTableCell>\r\n                  <StyledTableCell align=\"left\">{projectData[0][\"max(PM_EMAIL)\"]}</StyledTableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <StyledTableCell style={{ backgroundColor: \"#a5e5ff\" }}>SA Name</StyledTableCell>\r\n                  <StyledTableCell align=\"left\">{projectData[0].SA_NAME1}</StyledTableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <StyledTableCell style={{ backgroundColor: \"#a5e5ff\" }}>SA Email</StyledTableCell>\r\n                  <StyledTableCell align=\"left\">{projectData[0][\"max(SA_EMAIL)\"]}</StyledTableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <StyledTableCell style={{ backgroundColor: \"#c3edff\" }}>Project Status</StyledTableCell>\r\n                  <StyledTableCell align=\"left\">{projectData[0].project_status}</StyledTableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <StyledTableCell style={{ backgroundColor: \"#d2f2ff\" }}>FP/TM</StyledTableCell>\r\n                  <StyledTableCell align=\"left\">{projectData[0].project_type}</StyledTableCell>\r\n                </TableRow>\r\n              </TableBody>\r\n            </Table>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n      <div className=\"projectBudget\">\r\n        <Card className={classes.root} variant=\"outlined\">\r\n          <CardContent>\r\n            <Table className={classes.table} aria-label=\"customized table\">\r\n              <TableBody>\r\n                <TableRow>\r\n                  <StyledTableCell style={{ backgroundColor: \"#6ad4ff\" }}>Project Milestone</StyledTableCell>\r\n                  <StyledTableCell align=\"left\">{projectData[0].project_milestone}</StyledTableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <StyledTableCell style={{ backgroundColor: \"#96e0ff\" }}>Project % Complete</StyledTableCell>\r\n                  <StyledTableCell align=\"left\">{projectData[0].project_complete_percent}</StyledTableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <StyledTableCell style={{ backgroundColor: \"#b4e9ff\" }}>Project Fin (Act/Bud)</StyledTableCell>\r\n                  <StyledTableCell align=\"left\">{projectData[0].project_fin_act_bud}</StyledTableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <StyledTableCell style={{ backgroundColor: \"#d2f2ff\" }}>Project Fin (Fct/Bud)</StyledTableCell>\r\n                  <StyledTableCell align=\"left\">{projectData[0].project_fin_fct_bud}</StyledTableCell>\r\n                </TableRow>\r\n              </TableBody>\r\n            </Table>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n{/* <Typography className={classes.title}>\r\n                  \r\n                  </Typography>\r\n                  <Typography variant=\"h5\" component=\"h2\">\r\n                    hello boy\r\n                  </Typography>\r\n                  <Typography className={classes.pos} color=\"textSecondary\">\r\n                    adjective\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" component=\"p\">\r\n                    well meaning and kindly.\r\n                    <br />\r\n                    {'\"a benevolent smile\"'}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" component=\"p\">\r\n                    well meaning and kindly.\r\n                    <br />\r\n                    {'\"a benevolent smile\"'}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" component=\"p\">\r\n                    well meaning and kindly.\r\n                    <br />\r\n                    {'\"a benevolent smile\"'}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" component=\"p\">\r\n                    well meaning and kindly.\r\n                    <br />\r\n                    {'\"a benevolent smile\"'}\r\n</Typography> */}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        minWidth: 400,\r\n        color:'white'\r\n    },\r\n    bullet: {\r\n        display: 'inline-block',\r\n        margin: '0 2px',\r\n        transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n        fontFamily:\"'Montserrat', sans-serif\",\r\n        fontSize:11\r\n    },\r\n});\r\n\r\nexport default function OutlinedCard(props) {\r\n    const projectData = JSON.parse(localStorage.getItem('tables'));\r\n    console.log(props.data);\r\n    const classes = useStyles();\r\n    for (let i of projectData) {\r\n        //debugger\r\n        if (props.data === i.project_name) {\r\n            console.log(\"I am In\");\r\n            return (\r\n                <div >\r\n                    <Card className=\"projectBudget shadowClass\"  style={{boxShadow:'none',backgroundColor:\"#DCDCDC\"}}>\r\n                        <CardContent>\r\n                            <Typography className={classes.pos} variant=\"h7\" component=\"h4\" color=\"textPrimary\" gutterBottom style={{color:'black'}}> Project Name\r\n                            <Typography className={classes.pos}>{i.project_name}</Typography></Typography>\r\n                            <Typography className={classes.pos} variant=\"h7\" component=\"h4\" color=\"textPrimary\" gutterBottom style={{color:'black'}}>Project Start Date\r\n                            <Typography className={classes.pos}>{i.project_start_date.split(\"T\")[0]}</Typography></Typography>\r\n                            <Typography className={classes.pos} variant=\"h7\" component=\"h4\" color=\"textPrimary\" gutterBottom style={{color:'black'}}>PM Name\r\n                            <Typography className={classes.pos}>{i.PA_NAME1}</Typography></Typography>\r\n                            <Typography className={classes.pos} variant=\"h7\" component=\"h4\" color=\"textPrimary\" gutterBottom style={{color:'black'}}>PM Email\r\n                            <Typography className={classes.pos}>{i[\"max(PM_EMAIL)\"]}</Typography></Typography>\r\n                            <Typography className={classes.pos} variant=\"h7\" component=\"h4\" color=\"textPrimary\" gutterBottom style={{color:'black'}}>SA Name\r\n                            <Typography className={classes.pos}>{i.SA_NAME1}</Typography></Typography>\r\n                            <Typography className={classes.pos} variant=\"h7\" component=\"h4\" color=\"textPrimary\" gutterBottom style={{color:'black'}}>SA Email\r\n                            <Typography className={classes.pos}>{i[\"max(SA_EMAIL)\"]}</Typography></Typography>\r\n                            <Typography className={classes.pos} variant=\"h7\" component=\"h4\" color=\"textPrimary\" gutterBottom style={{color:'black'}}>Project Status\r\n                            <Typography className={classes.pos}>{i.project_status}</Typography></Typography>\r\n                            {/* <Typography className={classes.pos} variant=\"h7\" component=\"h4\" color=\"textPrimary\" gutterBottom style={{color:'#d93'}}>Project Status\r\n                            <Typography className={classes.pos}>{i.project_status}</Typography></Typography>\r\n                            <Typography className={classes.pos} variant=\"h7\" component=\"h3\" color=\"textPrimary\" gutterBottom style={{color:'#d93'}}>FP/TM\r\n                            <Typography className={classes.pos}>{i.project_type}</Typography></Typography>\r\n                            <Typography className={classes.pos} variant=\"h7\" component=\"h3\" color=\"textPrimary\" gutterBottom style={{color:'#d93'}}>Project Milestone\r\n                            <Typography className={classes.pos}>{i.project_milestone}</Typography></Typography>\r\n                            <Typography className={classes.pos} variant=\"h7\" component=\"h3\" color=\"textPrimary\" gutterBottom style={{color:'#d93'}}>Project % Complete\r\n                            <Typography className={classes.pos}>{i.project_complete_percent}</Typography></Typography>\r\n                            <Typography className={classes.pos} variant=\"h7\" component=\"h3\" color=\"textPrimary\" gutterBottom style={{color:'#d93'}}>Project Fin (Act/Bud)\r\n                            <Typography className={classes.pos}>{i.project_fin_act_bud}</Typography></Typography>\r\n                            <Typography className={classes.pos} variant=\"h7\" component=\"h3\" color=\"textPrimary\" gutterBottom style={{color:'#d93'}}>Project Fin (Fct/Bud)\r\n                            <Typography className={classes.pos}>{i.project_fin_fct_bud}</Typography></Typography> */}\r\n                        </CardContent>\r\n\r\n                    </Card>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n    return (\r\n        <div >\r\n            <Card className=\"projectBudget shadowClass \" style={{boxShadow:'none',backgroundColor:\"#DCDCDC\"}}>\r\n\r\n                <CardContent style={{borderBottom:'none'}}>\r\n                    <Typography className={classes.pos} variant=\"h7\" component=\"h4\" color=\"textPrimary\" gutterBottom style={{color:'black'}}> Project Name\r\n                    <Typography className={classes.pos}>{projectData[0].project_name}</Typography></Typography>\r\n                    <Typography className={classes.pos} variant=\"h7\" component=\"h4\" color=\"textPrimary\" gutterBottom style={{color:'black'}}>Project Start Date\r\n                    <Typography className={classes.pos}>{projectData[0].project_start_date.split(\"T\")[0]}</Typography></Typography>\r\n                    <Typography className={classes.pos} variant=\"h7\" component=\"h4\" color=\"textPrimary\" gutterBottom style={{color:'black'}}>PM Name\r\n                    <Typography className={classes.pos}>{projectData[0].PA_NAME1}</Typography></Typography>\r\n                    <Typography className={classes.pos} variant=\"h7\" component=\"h4\" color=\"textPrimary\" gutterBottom style={{color:'black'}}>PM Email\r\n                    <Typography className={classes.pos}>{projectData[0][\"max(PM_EMAIL)\"]}</Typography></Typography>\r\n                    <Typography className={classes.pos} variant=\"h7\" component=\"h4\" color=\"textPrimary\" gutterBottom style={{color:'black'}}>SA Name\r\n                    <Typography className={classes.pos}>{projectData[0].SA_NAME1}</Typography></Typography>\r\n                    <Typography className={classes.pos} variant=\"h7\" component=\"h4\" color=\"textPrimary\" gutterBottom style={{color:'black'}}>SA Email\r\n                    <Typography className={classes.pos}>{projectData[0][\"max(SA_EMAIL)\"]}</Typography></Typography>\r\n                    <Typography className={classes.pos} variant=\"h7\" component=\"h4\" color=\"textPrimary\" gutterBottom style={{color:'black'}}>Project Status\r\n                    <Typography className={classes.pos}>{projectData[0].project_status}</Typography></Typography>\r\n                    {/* <Typography className={classes.pos} variant=\"h7\" component=\"h3\" color=\"textPrimary\" gutterBottom style={{color:'#d93'}}>Project Status\r\n                    <Typography className={classes.pos}>{projectData[0].project_status}</Typography></Typography>\r\n                    <Typography className={classes.pos} variant=\"h7\" component=\"h3\" color=\"textPrimary\" gutterBottom style={{color:'#d93'}}>FP/TM\r\n                    <Typography className={classes.pos}>{projectData[0].project_type}</Typography></Typography>\r\n                    <Typography className={classes.pos} variant=\"h7\" component=\"h3\" color=\"textPrimary\" gutterBottom style={{color:'#d93'}}>Project Milestone\r\n                    <Typography className={classes.pos}>{projectData[0].project_milestone}</Typography></Typography>\r\n                    <Typography className={classes.pos} variant=\"h7\" component=\"h3\" color=\"textPrimary\" gutterBottom style={{color:'#d93'}}>Project % Complete\r\n                            <Typography className={classes.pos}>{projectData[0].project_complete_percent}</Typography></Typography>\r\n                            <Typography className={classes.pos} variant=\"h7\" component=\"h3\" color=\"textPrimary\" gutterBottom style={{color:'#d93'}}>Project Fin (Act/Bud)\r\n                            <Typography className={classes.pos}>{projectData[0].project_fin_act_bud}</Typography></Typography>\r\n                            <Typography className={classes.pos} variant=\"h7\" component=\"h3\" color=\"textPrimary\" gutterBottom style={{color:'#d93'}}>Project Fin (Fct/Bud)\r\n                            <Typography className={classes.pos}>{projectData[0].project_fin_fct_bud}</Typography></Typography> */}\r\n                </CardContent>\r\n\r\n            </Card>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport * as AiIcons from 'react-icons/ai';\r\nimport * as IoIcons from 'react-icons/io';\r\n\r\nexport const PMSidebarData = [\r\n  {\r\n    title: 'Home',\r\n    eventKey:\"home\",\r\n    path: '/',\r\n    icon: <AiIcons.AiFillHome />,\r\n    cName: 'nav-text'\r\n  },\r\n  \r\n  {\r\n    title: 'Self KPI',\r\n    path: '/KPI/PM',\r\n    icon: <FaIcons.FaCartPlus />,\r\n    cName: 'nav-text'\r\n  },\r\n  {\r\n    title: 'PMInput',\r\n    path: '/pmInput',\r\n    icon: <IoIcons.IoIosPaper />,\r\n    cName: 'nav-text'\r\n  }\r\n];\r\n","import React from 'react';\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport * as AiIcons from 'react-icons/ai';\r\nimport * as IoIcons from 'react-icons/io';\r\n\r\nexport const SASidebarData = [\r\n  {\r\n    title: 'Home',\r\n    eventKey:\"home\",\r\n    path: '/',\r\n    icon: <AiIcons.AiFillHome />,\r\n    cName: 'nav-text'\r\n  },\r\n  \r\n  {\r\n    title: 'Self KPI',\r\n    path: '/KPI/PM',\r\n    icon: <FaIcons.FaCartPlus />,\r\n    cName: 'nav-text'\r\n  },\r\n];\r\n","import React, { useEffect, useState } from 'react';\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport * as AiIcons from 'react-icons/ai';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './Navbar.css';\r\nimport { IconContext } from 'react-icons';\r\nimport { PMSidebarData } from './PMSidebarData';\r\nimport { SASidebarData } from './SASideBarData';\r\nimport { observer } from 'mobx-react';\r\n\r\nconst Navbar = props => {\r\n  const [sidebar, setSidebar] = useState(true);\r\n  const [role, setRole] = useState('');\r\n\r\n  return (\r\n    <>\r\n      <IconContext.Provider value={{ color: 'white' }}>\r\n        <nav className={sidebar ? 'nav-menu active' : 'nav-menu'}>\r\n          <ul className=\"nav-menu-items\">\r\n            {props.projectStore.sidebarArray.map((item, index) => {\r\n              return (\r\n                <li key={index} className={item.cName}>\r\n                  <NavLink exact to={item.path} activeClassName=\"main-nav-active\">\r\n                    {item.icon}\r\n                    <span>{item.title}</span>\r\n                  </NavLink>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </nav>\r\n      </IconContext.Provider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default observer(Navbar);\r\n","import React from 'react';\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport * as AiIcons from 'react-icons/ai';\r\nimport * as IoIcons from 'react-icons/io';\r\n\r\nexport const PMOSidebarData = [\r\n  {\r\n    title: 'Home',\r\n    eventKey:\"home\",\r\n    path: '/',\r\n    icon: <AiIcons.AiFillHome />,\r\n    cName: 'nav-text'\r\n  },\r\n  {\r\n    title: 'Project KPIs',\r\n    path: '/KPI/PM',\r\n    icon: <FaIcons.FaCartPlus />,\r\n    cName: 'nav-text'\r\n  },\r\n  {\r\n    title: 'PMO Input',\r\n    path: '/pmoInput',\r\n    icon: <IoIcons.IoIosPaper />,\r\n    cName: 'nav-text'\r\n  }\r\n];\r\n","import { action, makeObservable, observable } from 'mobx';\r\nimport { Row } from 'react-bootstrap';\r\nimport { PMSidebarData } from '../Components/PMSidebarData';\r\nimport { SASidebarData } from '../Components/SASideBarData';\r\nimport { PMOSidebarData } from '../Components/PMOSidebarData';\r\n\r\nclass ProjectStore {\r\n  id = 1;\r\n  name = 'default';\r\n  projectPMO = 'default';\r\n\r\n  sidebarArray = SASidebarData;\r\n  roleName='SA'\r\n  constructor() {\r\n    makeObservable(this, {\r\n      id: observable,\r\n      name: observable,\r\n      projectPMO:observable,\r\n      changeProject: action,\r\n      sidebarArray: observable,\r\n      changeRole:action\r\n    });\r\n  }\r\n  changeProject(name,id) {\r\n    this.name = name;\r\n    this.id = id;\r\n    // if (name === 1) {\r\n    //   this.sidebarArray = SASidebarData;\r\n    // } else {\r\n    //   this.sidebarArray = PMSidebarData;\r\n    // }\r\n  }\r\n  changeRole(roleName,projectPMO){\r\n      this.role=roleName;\r\n      this.projectPMO = projectPMO;\r\n      if (roleName === 'SA' && projectPMO === 'N') {\r\n        this.sidebarArray = SASidebarData;\r\n      } else if(roleName === 'PM' && projectPMO === 'N'){\r\n        this.sidebarArray = PMSidebarData;\r\n      }\r\n      else if(projectPMO === 'Y'){\r\n        this.sidebarArray = PMOSidebarData;\r\n      }\r\n  }\r\n\r\n}\r\nconst projectStore = new ProjectStore();\r\nexport default projectStore;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ShowData from '../../ShowData';\r\nimport { Button } from '@material-ui/core';\r\nimport OutlinedCard from './ProjectDetails';\r\nimport { Route, Router, Switch } from 'react-router';\r\nimport Navbar from '../../Components/Navigation';\r\nimport KPI from '../kpi/KPI';\r\nimport PMInput from '../pmInput';\r\nimport { Tab, Tabs } from 'react-bootstrap';\r\nimport { observer, Observer } from 'mobx-react';\r\nimport projectStore from '../../stores/ProjectStore';\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nconst StyledTableCell = withStyles(theme => ({\r\n  head: {\r\n    backgroundColor: theme.palette.background.default,\r\n    color: theme.palette.common.black,\r\n    borderColor:' #bebebe',\r\n    fontSize:15,\r\n    fontFamily:\"'Montserrat', sans-serif\"\r\n    \r\n  },\r\n  body: {\r\n    fontSize: 12,\r\n    borderColor:'#bebebe',\r\n    fontFamily:\"'Montserrat', sans-serif\",\r\n    backgroundColor: theme.palette.background.default,\r\n    \r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles(theme => ({\r\n  root: {\r\n  },\r\n}))(TableRow);\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 400,\r\n    \r\n  },\r\n  toolbar:{\r\n    \" & p:nth-of-type(2)\":{\r\n      fontFamily:\"'Montserrat', sans-serif\",\r\n      color:'white'\r\n    },\r\n    \" & p:nth-of-type(1)\":{\r\n      fontFamily:\"'Montserrat', sans-serif\",\r\n      color:'white'\r\n    }\r\n\r\n  },\r\n  input:{\r\n    fontFamily:\"'Montserrat', sans-serif\",\r\n    color:'white'\r\n  },\r\n  selectIcon:{\r\n    color:'white'\r\n  },\r\n  root:{\r\n    color:'white'\r\n  }\r\n});\r\n\r\nconst Tables = props => {\r\n  const classes = useStyles();\r\n  const username = props.data;\r\n  console.log(username+\".....\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [change, changePage] = useState(false);\r\n  const [role, changeRole] = useState(0);\r\n  const [key, setKey] = useState('home');\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n  // localStorage.setItem('project',JSON.stringify('project'));\r\n  console.log(key);\r\n  useEffect(() => {\r\n    fetch(`http://20.84.70.197:5000/showTables/${username}`)\r\n      .then(resp => resp.json())\r\n      .then(json => {\r\n        console.log({ json });\r\n          props.projectStore.changeRole(json[0].roleId,json[0].PMO);\r\n        localStorage.setItem('tables', JSON.stringify(json));\r\n        setLoading(true);\r\n      });\r\n  }, []);\r\n  console.log(loading);\r\n  let rows = JSON.parse(localStorage.getItem('tables'));\r\n  console.log(key.includes('PM'));\r\n  const projectPMO = rows.map(item=>item.PMO).filter((value,index,self)=>self.indexOf(value)===index);\r\n  console.log(projectPMO[0]);\r\n  let roleId = JSON.parse(localStorage.getItem('project'));\r\n\r\n // style={{ borderRadius: '4px' }}\r\n  if (loading) {\r\n    if (props.projectStore.id===rows[0].project_id) {\r\n      props.projectStore.changeRole(rows[0].roleId,rows[0].PMO);\r\n    }\r\n    else{\r\n      props.projectStore.changeRole(roleId,rows[0].PMO);\r\n    }\r\n    return (\r\n      <div className=\"tableHead shadowClass\" style={{ borderRadius: '2px' }} >\r\n              <h2><b>Project Health Dashboard</b></h2>\r\n              <TableContainer  component={Paper}  style={{ borderRadius: '10px',border:'2px solid black'}} >\r\n                <Table className={classes.table} aria-label=\"simple table\">\r\n                  <TableHead>\r\n                    <TableRow className=\"tableField\">\r\n                      <StyledTableCell align=\"center\" style={{backgroundColor:\"#DCDCDC\"}}>\r\n                        <b>Project</b>\r\n                      </StyledTableCell>\r\n                      <StyledTableCell align=\"left\" style={{backgroundColor:\"#DCDCDC\"}}><b>Current Milestone</b></StyledTableCell>\r\n                      <StyledTableCell align=\"left\" style={{backgroundColor:\"#DCDCDC\"}}><b>Project Type (FP/TM)</b></StyledTableCell>\r\n                      <StyledTableCell align=\"left\" style={{borderRight:'1px solid',backgroundColor:\"#DCDCDC\"}}><b>%Comp</b>\r\n                      </StyledTableCell>\r\n                      <StyledTableCell\r\n                        align=\"center\"\r\n                        colSpan=\"1\"\r\n                        className=\"border\" style={{borderRight:'1px solid',backgroundColor:\"#DCDCDC\"}}>\r\n                        <b>Current Project Health</b>\r\n                      </StyledTableCell>\r\n                      <StyledTableCell\r\n                        align=\"center\"\r\n                        colSpan=\"2\"\r\n                        className=\"border\" style={{borderRight:'1px solid',backgroundColor:\"#DCDCDC\"}}\r\n                      ><b>PM KPI</b>\r\n                      </StyledTableCell>\r\n                      <StyledTableCell\r\n                        align=\"center\"\r\n                        colSpan=\"2\"\r\n                        className=\"border\" style={{borderRight:'1px solid',backgroundColor:\"#DCDCDC\"}} >\r\n                        <b>SA KPI</b>\r\n                      </StyledTableCell>\r\n                      <StyledTableCell\r\n                        align=\"center\"\r\n                        colSpan=\"2\"\r\n                        className=\"border\" style={{backgroundColor:\"#DCDCDC\"}}>\r\n                        <b>Proj Fin</b>\r\n                      </StyledTableCell>\r\n                    </TableRow>\r\n                    <StyledTableRow key=\"first row\">\r\n                      <StyledTableCell component=\"th\" scope=\"row\" colSpan='4' style={{borderRight:'1px solid'}}>\r\n                        \r\n                      </StyledTableCell>\r\n                      <StyledTableCell component=\"th\" scope=\"row\" colSpan='1' style={{borderRight:'1px solid'}}>\r\n                      </StyledTableCell>\r\n                      {/* <StyledTableCell align=\"left\">&nbsp;</StyledTableCell>\r\n                      <StyledTableCell align=\"left\">&nbsp;</StyledTableCell>\r\n                      <StyledTableCell align=\"left\">&nbsp;</StyledTableCell> */}\r\n                      <StyledTableCell align=\"left\" className=\"border\" style={{fontSize:13}}>\r\n                       <b>Self</b>\r\n                      </StyledTableCell>\r\n                      <StyledTableCell align=\"left\" className=\"border\" style={{fontSize:13,borderRight:'1px solid'}}>\r\n                        <b>PMO</b>\r\n                      </StyledTableCell>\r\n                      <StyledTableCell align=\"left\" className=\"border\" style={{fontSize:13}}>\r\n                        <b>Self</b>\r\n                      </StyledTableCell>\r\n                      <StyledTableCell align=\"left\" className=\"border\" style={{fontSize:13,borderRight:'1px solid'}}>\r\n                        <b>PMO</b>\r\n                      </StyledTableCell>\r\n                      <StyledTableCell align=\"left\" className=\"border\" style={{fontSize:13}}>\r\n                        <b>Act/Bud</b>\r\n                      </StyledTableCell>\r\n                      <StyledTableCell align=\"left\" className=\"border\" style={{fontSize:13}}>\r\n                        <b>Fct/Bud</b>\r\n                      </StyledTableCell>\r\n                      {/* <StyledTableCell align=\"left\">&nbsp;</StyledTableCell> */}\r\n                    </StyledTableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    \r\n                    {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\r\n                      <StyledTableRow key={row.project_name}>\r\n                        <StyledTableCell\r\n                          align=\"left\"\r\n                          component=\"th\"\r\n                          scope=\"row\"\r\n                        >\r\n                          <Button\r\n                            className=\"btn\"\r\n                            size=\"small\"\r\n                            style={{fontSize:15,fontWeight:'bold',fontFamily:\"'Montserrat', sans-serif\"}}\r\n                            onClick={() => {\r\n                              props.getProjectName(row.project_name);\r\n                              localStorage.setItem(\r\n                                'project',\r\n                                JSON.stringify(row.roleId)\r\n                              );\r\n                              props.projectStore.changeProject(row.project_name,row.project_id);\r\n                              props.projectStore.changeRole(row.roleId,projectPMO[0]);\r\n                            }}\r\n                          >\r\n                            {row.project_name}\r\n                          </Button>\r\n                        </StyledTableCell>\r\n                        <StyledTableCell align=\"center\">\r\n                          {row.project_milestone}\r\n                        </StyledTableCell>\r\n                        <StyledTableCell align=\"center\">\r\n                          {row.project_type}\r\n                        </StyledTableCell>\r\n                        <StyledTableCell align=\"center\" style={{borderRight:'1px solid',fontSize:14}}>\r\n                          {row.project_complete_percent}%\r\n                        </StyledTableCell>                   \r\n                        {row.pmoscore >=85?<StyledTableCell align=\"center\" style={{borderRight:'1px solid',backgroundColor:'#32ed7d',fontSize:14}}>{row.pmoscore||0}%</StyledTableCell>:row.pmoscore >=70&&row.pmoscore <85?<StyledTableCell align=\"center\" style={{borderRight:'1px solid',backgroundColor:'#fbff91',fontSize:14}}>{row.pmoscore||0}%</StyledTableCell>:row.pmoscore <70?<StyledTableCell align=\"center\" style={{borderRight:'1px solid',backgroundColor:'#ff8f73',fontSize:14}}>{row.pmoscore||0}%</StyledTableCell>:null}\r\n                        <StyledTableCell align=\"center\" style={{borderRight:'1px solid',fontSize:14}}>{(row.pm_selfscore||0).toFixed(0)||0}%</StyledTableCell>\r\n                        {row.pm_pmoscore >=85?<StyledTableCell align=\"center\" style={{borderRight:'1px solid',backgroundColor:'#32ed7d',fontSize:14}}>{row.pm_pmoscore||0}%</StyledTableCell>:row.pm_pmoscore >=70&&row.pm_pmoscore <85?<StyledTableCell align=\"center\" style={{borderRight:'1px solid',backgroundColor:'#fbff91',fontSize:14}}>{row.pm_pmoscore||0}%</StyledTableCell>:row.pm_pmoscore <70?<StyledTableCell align=\"center\" style={{borderRight:'1px solid',backgroundColor:'#ff8f73',fontSize:14}}>{row.pm_pmoscore||0}%</StyledTableCell>:null}\r\n                        <StyledTableCell align=\"center\" style={{borderRight:'1px solid',fontSize:14}}>{(row.sa_selfscore||0).toFixed(0)}%</StyledTableCell>\r\n                        {row.sa_pmoscore >=85?<StyledTableCell align=\"center\" style={{borderRight:'1px solid',fontSize:14,backgroundColor:'#32ed7d'}}>{row.sa_pmoscore||0}%</StyledTableCell>:row.sa_pmoscore >=70&&row.sa_pmoscore <85?<StyledTableCell align=\"center\" style={{borderRight:'1px solid',backgroundColor:'#fbff91',fontSize:14}}>{row.sa_pmoscore||0}%</StyledTableCell>:row.sa_pmoscore <70?<StyledTableCell align=\"center\" style={{borderRight:'1px solid',backgroundColor:'#ff8f73',fontSize:14}}>{row.sa_pmoscore||0}%</StyledTableCell>:null}\r\n                        {row.project_fin_act_bud > 110 && row.project_type==='FP'?<StyledTableCell style={{backgroundColor:'#ff8f73',fontSize:14,borderRight:'1px solid'}}align=\"center\">\r\n                          {row.project_fin_act_bud}%\r\n                        </StyledTableCell>:row.project_fin_act_bud > 101 && row.project_fin_act_bud <=110 && row.project_type==='FP'?<StyledTableCell style={{backgroundColor:'#fbff91',borderRight:'1px solid',fontSize:14}}align=\"center\">\r\n                          {row.project_fin_act_bud}%\r\n                        </StyledTableCell>:row.project_fin_act_bud <= 100 && row.project_type==='FP'?<StyledTableCell style={{backgroundColor:'#32ed7d',borderRight:'1px solid',fontSize:14}}align=\"center\">\r\n                          {row.project_fin_act_bud}%\r\n                        </StyledTableCell>:row.project_fin_act_bud<= 80 && row.project_type==='TM'?<StyledTableCell style={{backgroundColor:'#ff8f73',borderRight:'1px solid',fontSize:14}} align=\"center\">\r\n                          {row.project_fin_act_bud}%\r\n                        </StyledTableCell>:row.project_fin_act_bud>80&&row.project_fin_act_bud<=100&& row.project_type==='TM'?<StyledTableCell style={{backgroundColor:'#fbff91',borderRight:'1px solid',fontSize:14}}align=\"center\">\r\n                          {row.project_fin_act_bud}%\r\n                        </StyledTableCell>:row.project_fin_act_bud>100 && row.project_type==='TM'?<StyledTableCell style={{backgroundColor:'#32ed7d',borderRight:'1px solid',fontSize:14}}align=\"center\">\r\n                          {row.project_fin_act_bud}%\r\n                        </StyledTableCell>:<StyledTableCell align=\"center\" style={{borderRight:'1px solid',fontSize:14}}>\r\n                          {row.project_fin_act_bud}%\r\n                        </StyledTableCell>}\r\n                        {row.project_fin_fct_bud>120&&row.project_type==='FP'?<StyledTableCell style={{backgroundColor:'#ff8f73',fontSize:14}}align=\"center\">\r\n                          {row.project_fin_fct_bud}%\r\n                        </StyledTableCell>:row.project_fin_fct_bud>110&&row.project_fin_fct_bud<=120&&row.project_type==='FP'?<StyledTableCell style={{backgroundColor:'#fbff91',fontSize:14}} align=\"center\">\r\n                          {row.project_fin_fct_bud}%\r\n                        </StyledTableCell>:row.project_fin_fct_bud<=110&&row.project_type==='FP'?<StyledTableCell style={{backgroundColor:'#32ed7d',fontSize:14}}align=\"center\">\r\n                          {row.project_fin_fct_bud}%\r\n                        </StyledTableCell>:row.project_fin_fct_bud<=70&&row.project_type==='TM'?<StyledTableCell style={{backgroundColor:'#ff8f73',fontSize:14}}align=\"center\">\r\n                          {row.project_fin_fct_bud}%\r\n                        </StyledTableCell>:row.project_fin_fct_bud>70&&row.project_fin_fct_bud<=100&&row.project_type==='TM'?<StyledTableCell style={{backgroundColor:'#fbff91',fontSize:14}}align=\"center\">\r\n                          {row.project_fin_fct_bud}%\r\n                        </StyledTableCell>:row.project_fin_fct_bud>100&&row.project_type==='TM'?<StyledTableCell style={{backgroundColor:'#32ed7d',fontSize:14}} align=\"center\">\r\n                          {row.project_fin_fct_bud}%\r\n                        </StyledTableCell >:<StyledTableCell align=\"center\"  style={{backgroundColor:'#32ed7d',fontSize:14}}>\r\n                          {row.project_fin_fct_bud}%\r\n                        </StyledTableCell>}\r\n                      </StyledTableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n              <TablePagination\r\n        rowsPerPageOptions={[3, 10, 25]}\r\n        component=\"div\"\r\n        count={rows.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        classes ={{\r\n          toolbar: classes.toolbar,\r\n          input:classes.input,\r\n          selectIcon:classes.selectIcon,\r\n          root:classes.root\r\n        }}\r\n      />\r\n            </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"app\">\r\n        <div className=\"container\">Loading, please wait..</div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\nexport default observer(Tables);\r\n","import { makeStyles } from '@material-ui/core';\r\nimport { red } from '@material-ui/core/colors';\r\nimport React from 'react'\r\nimport CircularProgressWithLabel from './progressBar'\r\n\r\n\r\nexport const Progress = (props) => {\r\n    const projectData = JSON.parse(localStorage.getItem('tables'));\r\n    console.log(projectData);\r\n    for (let i of projectData) {\r\n        if (props.data === i.project_name) {\r\n            console.log(\"I am In\");\r\n            return (\r\n                <div className=\"box\">\r\n                    <CircularProgressWithLabel size={125} value={i.project_complete_percent} progressColor={\"green\"} label=\"Project % Complete\"/> \r\n                    <CircularProgressWithLabel size={125} value={i.project_fin_act_bud} progressColor={\"red\"} label=\"Project Fin (Act/Bud)\"/>\r\n                    <CircularProgressWithLabel size={125} value={i.project_fin_fct_bud} progressColor={\"blue\"} label=\"Project Fin (Fct/Bud)\"/>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <CircularProgressWithLabel size={125} value={projectData[0].project_complete_percent} progressColor={\"green\"} label=\"Project % Complete\"/> \r\n            <CircularProgressWithLabel size={125} value={projectData[0].project_fin_act_bud} progressColor={\"red\"} label=\"Project Fin (Act/Bud)\"/>\r\n            <CircularProgressWithLabel size={125} value={projectData[0].project_fin_fct_bud} progressColor={\"blue\"} label=\"Project Fin (Fct/Bud)\"/>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CustomizedTables from './ProjectHealth';\r\nimport { Button, CircularProgress } from '@material-ui/core';\r\nimport CircularProgressWithLabel from './progressBar';\r\nimport OutlinedCard from './ProjectDetails';\r\nimport Tables from './ProjectHealth';\r\nimport UserStore from '../../stores/UserStore';\r\nimport ShowData from '../../ShowData';\r\nimport { Progress } from './Progress';\r\nimport { Image } from 'react-bootstrap';\r\nimport projectStore from '../../stores/ProjectStore';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n}));\r\n\r\nexport default function Home(props) {\r\n    const username = sessionStorage.getItem('username');\r\n    //const username = UserStore.username;\r\n    console.log(username);\r\n    const [loading, setLoading] = useState(false);\r\n  const [change, changePage] = useState(false);\r\n  const [role, changeRole] = useState(0);\r\n  const [key, setKey] = useState('home');\r\n    useEffect(() => {\r\n        fetch(`http://20.84.70.197:5000/showTables/${username}`)\r\n          .then(resp => resp.json())\r\n          .then(json => {\r\n            console.log({ json });\r\n            localStorage.setItem('tables', JSON.stringify(json));\r\n            setLoading(true);\r\n          });\r\n      }, []);\r\n      console.log(loading);\r\n      let rows = JSON.parse(localStorage.getItem('tables'));\r\n      console.log(key.includes('PM'));\r\n    \r\n    const classes = useStyles();\r\n    const [projectname, setProjectname] = useState(projectStore.name);\r\n    const [progress, setProgress] = useState({ value: 10, color: 'black' })\r\n    useEffect(() => {\r\n        setProgressColor(progress.value)\r\n    }, [progress.value])\r\n\r\n    function setProgressColor(value) {\r\n        if (value >= 0 && value <= 20) setProgress(p => ({ ...p, color: 'red' }))\r\n        if (value === 40) setProgress(p => ({ ...p, color: 'green' }))\r\n        if (value === 60) setProgress(p => ({ ...p, color: 'blue' }))\r\n    }\r\n    if(loading){\r\n    return (\r\n        <div className={classes.root}>\r\n            {/* <Grid className=\"Logoo\"  item sm={10}\r\n            container \r\n            direction=\"row\"\r\n            justify=\"center\"\r\n            alignItems=\"baseline\"\r\n            variant=\"contained\" style={{backgroundColor:\"white\",color:\"red\"}}>PMO Audit Tool\r\n                \r\n            </Grid> */}\r\n            \r\n            <Grid container spacing={2}>\r\n                {/* <Grid item sm={2}\r\n                    container\r\n                    direction=\"row\"\r\n                    justify=\"flex-start\"\r\n                    alignItems=\"stretch\"> hello anurag\r\n                </Grid> */}\r\n                <Grid item sm={9}>\r\n\r\n                    <Grid container spacing={2} direction=\"column\" >\r\n\r\n                        <Grid item style={{margin:3}} spacing={5} >\r\n                            <Tables projectStore={projectStore} data={UserStore.username} getProjectName={(projectname1) => \r\n                                {setProjectname(projectname1)}} />\r\n                        </Grid>\r\n                        {/* <Grid item >\r\n                            <Progress data={projectname} />\r\n                        </Grid> */}\r\n                    </Grid>\r\n\r\n                </Grid>\r\n                <Grid item sm={3}>\r\n\r\n                    <OutlinedCard data={projectname} />\r\n\r\n\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\nelse{\r\n    return(\r\n    <div>\r\n      Loading please wait....\r\n    </div>\r\n    )\r\n}\r\n\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/accel.3ad7bc40.jpg\";","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport UserStore from '../stores/UserStore';\r\nimport logo from '../images/accel.jpg';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 5,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function MenuAppBar() {\r\n  const classes = useStyles();\r\n  const [auth, setAuth] = React.useState(true);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const history = useHistory();\r\n\r\n  const handleChange = (event) => {\r\n    setAuth(event.target.checked);\r\n  };\r\n\r\n  const handleMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n   const handleLogout=()=> {\r\n     /*\r\n    let res = await fetch('http://20.84.70.197:5000/logout', {\r\n      method: 'post',\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-type': 'application/json',\r\n      },\r\n    });\r\n    let result = await res.json();\r\n\r\n    if (result && result.success) {\r\n      window.history.push('/');\r\n    }\r\n    */\r\n    try {\r\n      alert(\"logout\")\r\n      let res =  fetch('http://localhost:3000/logout', {\r\n        method: 'post',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n      let result =  res.json();\r\nconsole.log(result);\r\n      if (result && result.success) {\r\n        UserStore.loading = false;\r\n        UserStore.isLoggedIn = false;\r\n        UserStore.username = '';\r\n      }\r\n\r\n    }\r\n    catch (e) {\r\n      console.log(e);\r\n      console.log('eeexception');\r\n      alert(e+\"...\");\r\n\r\n    }\r\n    UserStore.loading = false;\r\n    UserStore.isLoggedIn = false;\r\n    UserStore.username = '';\r\n\r\n    sessionStorage.setItem('username',null);\r\n    sessionStorage.setItem('isLoggedIn', 'false');\r\n    window.location.href='/';\r\n   };\r\n\r\n  return (\r\n    <div className=\"AppBar \">\r\n      <div className={classes.root}>\r\n        {/* <FormGroup>\r\n        <FormControlLabel\r\n          control={<Switch checked={auth} onChange={handleChange} aria-label=\"login switch\" />}\r\n          label={auth ? 'Logout' : 'Login'}\r\n        />\r\n      </FormGroup> */}\r\n        <AppBar \r\n          style={{   background:'linear-gradient(to right,#ffffff,#d0d9d9)' }}\r\n          className=\"Logo\"\r\n          position=\"fixed\"\r\n        >\r\n          <Toolbar>\r\n          <img src={logo} width=\"160\" height=\"60\" />\r\n            <Typography variant=\"h6\" className={classes.title}></Typography>\r\n            {auth && (\r\n              <div>\r\n                <IconButton\r\n                  aria-label=\"account of current user\"\r\n                  aria-controls=\"menu-appbar\"\r\n                  aria-haspopup=\"true\"\r\n                  onClick={handleMenu}\r\n                  color=\"inherit\"\r\n                >\r\n                  <AccountCircle />\r\n                </IconButton>\r\n                <Menu\r\n                  id=\"menu-appbar\"\r\n                  anchorEl={anchorEl}\r\n                  anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                  }}\r\n                  keepMounted\r\n                  transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                  }}\r\n                  open={open}\r\n                  onClose={handleClose}\r\n                >\r\n                  <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                  <MenuItem onClick={handleClose}>My account</MenuItem>\r\n                  <MenuItem onClick={handleLogout}>Log out</MenuItem>\r\n                </Menu>\r\n              </div>\r\n            )}\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport UserStore from './stores/UserStore';\nimport { observer } from 'mobx-react';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport LoginForm from './pages/Login';\n// import LoginForm from './pages/Login';\nimport SubmitButton from './SubmitButton';\nimport './App.css';\nimport KPI from './pages/kpi/KPI';\nimport PMOInput from './pages/pmoinput';\n//import KPI from './KPI';\nimport PMInput from './pages/pmInput';\nimport PMKPI from './pages/kpi/PMKPI'\nimport Home from './pages/home/home';\nimport Navbar from './Components/Navigation';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { Grid } from '@material-ui/core';\nimport MenuAppBar from './Components/AppBar';\nimport projectStore from './stores/ProjectStore';\n//import ProjectHome from './pages/projects/ProjectHome';\n\n\nclass App extends React.Component {\n\n\n  async componentDidMount() {\n    try {\n     // alert(UserStore.isLoggedIn);\n      UserStore.loading = false;\n     // UserStore.isLoggedIn = true;\n      //UserStore.username ='sumit';\n     let res = await fetch('http://20.84.70.197:5000/isLoggedIn', {\n        method: 'get',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n      let result = await res.json();\n      if (result) {\n        UserStore.loading = false;\n        UserStore.isLoggedIn = true;\n        UserStore.username = result.sucess;\n\nsessionStorage.setItem('username',result.username);\nsessionStorage.setItem('isLoggedIn', 'true');\n\n      }\n      else {\n        UserStore.loading = false;\n        UserStore.isLoggedIn = false;\n      }\n      \n    }\n    catch (e) {\n      console.log('eeexception');\n      alert(e+\"...\");\n      UserStore.loading = false;\n      UserStore.isLoggedIn = false;\n\n    }\n  }\n\n  async doLogout() {\n    try {\n      alert(\"logout\")\n      let res = await fetch('http://20.84.70.197:5000/logout', {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-type': 'application/json'\n        }\n      });\n      let result = await res.json();\n\n      if (result && result.success) {\n        UserStore.loading = false;\n        UserStore.isLoggedIn = false;\n        UserStore.username = '';\n      }\n\n    }\n    catch (e) {\n      console.log(e);\n      console.log('eeexception');\n      alert(e+\"...\");\n\n    }\n  }\n\n\n  render() {\n\n    if (UserStore.loading) {\n      return (\n        <div className=\"app\">\n          <div className=\"container\">\n            Loading, please wait..\n            </div>\n        </div>\n      );\n    }\n    else {\n    // alert(UserStore.username +\"else\"+UserStore.isLoggedIn+\"...\"+sessionStorage.getItem('isLoggedIn')+\"..\"+sessionStorage.getItem('username'));\n      if ((UserStore.isLoggedIn || sessionStorage.getItem('isLoggedIn'))) {\n        if ((UserStore.username || sessionStorage.getItem('username'))) {\n          console.log(projectStore.name);\n          return (\n           // <KPI data={[UserStore.username,1]}></KPI>\n            <>\n            <MenuAppBar/>\n            <Grid position=\"fixed\" styel={{color:\"red\"}}>PMO Audit Tool</Grid> \n              <Router>\n                <Grid container spacing={3} >\n                  <Grid item sm={1}>\n                    <Navbar projectStore={projectStore} />\n                    {/* <div justi>PMO Audit Tool</div> */}\n                  </Grid>\n                  <Grid  item sm={11}>\n                    <Switch>\n                      <Route path='/' exact={true} component={Home} />\n                      <Route path='/pmInput' exact={true} render={(props) => (<PMInput data={projectStore.id} />)} />\n                      <Route path='/pmoInput' exact={true} render={(props) => (<PMOInput data={projectStore.id} />)} />\n                      <Route path='/KPI/PM' exact={true} render={(props) => (\n                                            <PMKPI data={[sessionStorage.getItem('username'),projectStore.id]}/>)} />\n                    {/*   <Route path='/KPI/SA' render={(props) => (\n                                <KPI data={[sessionStorage.getItem('username'),projectStore.id]}/>)} />\n                                \n                    <Route path='/projects' exact={true} component={ProjectList}/> */}\n                    </Switch>\n                  </Grid>\n\n                </Grid>\n              </Router>\n            </>\n\n            // <div className=\"app\">\n            //   {/* <PMInput /> */}\n\n            //   <Home/>\n            //   <div className=\"containerTable\">\n            //     {/* <LoginForm/> */}\n\n            //  <KPI></KPI>\n            //     {/* <Tables data={UserStore.username}></Tables> */}\n            //   </div>\n            // </div>\n            // <div className=\"app\">\n            //   <div className =\"container\">\n            //     Welcome {UserStore.username}\n            //     <SubmitButton text={'Log Out'} disabled ={false}\n            //     onClick ={()=>this.doLogout()}/>\n            //     </div>\n            //     </div>\n          );\n        }\n      }\n\n\n      return (\n        <div className=\"app\">\n          <div className=\"container\">\n            <Card>\n              <CardContent>\n                <LoginForm></LoginForm>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      );\n    }\n  }\n\n\n}\n\nexport default observer(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { SnackbarProvider } from 'notistack';\nReactDOM.render(\n  <React.StrictMode>\n    <SnackbarProvider>\n    <App />\n    </SnackbarProvider>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}